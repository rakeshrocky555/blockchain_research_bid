{"ast":null,"code":"/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file function.js\n * @author Marek Kotewicz <marek@ethdev.com>\n * @date 2015\n */\n\nvar coder = require('../solidity/coder');\nvar utils = require('../utils/utils');\nvar errors = require('./errors');\nvar formatters = require('./formatters');\nvar sha3 = require('../utils/sha3');\n\n/**\n * This prototype should be used to call/sendTransaction to solidity functions\n */\nvar SolidityFunction = function (eth, json, address) {\n  this._eth = eth;\n  this._inputTypes = json.inputs.map(function (i) {\n    return i.type;\n  });\n  this._outputTypes = json.outputs.map(function (i) {\n    return i.type;\n  });\n  this._constant = json.stateMutability === \"view\" || json.stateMutability === \"pure\" || json.constant;\n  this._payable = json.stateMutability === \"payable\" || json.payable;\n  this._name = utils.transformToFullName(json);\n  this._address = address;\n};\nSolidityFunction.prototype.extractCallback = function (args) {\n  if (utils.isFunction(args[args.length - 1])) {\n    return args.pop(); // modify the args array!\n  }\n};\n\nSolidityFunction.prototype.extractDefaultBlock = function (args) {\n  if (args.length > this._inputTypes.length && !utils.isObject(args[args.length - 1])) {\n    return formatters.inputDefaultBlockNumberFormatter(args.pop()); // modify the args array!\n  }\n};\n\n/**\n * Should be called to check if the number of arguments is correct\n *\n * @method validateArgs\n * @param {Array} arguments\n * @throws {Error} if it is not\n */\nSolidityFunction.prototype.validateArgs = function (args) {\n  var inputArgs = args.filter(function (a) {\n    // filter the options object but not arguments that are arrays\n    return !(utils.isObject(a) === true && utils.isArray(a) === false && utils.isBigNumber(a) === false);\n  });\n  if (inputArgs.length !== this._inputTypes.length) {\n    throw errors.InvalidNumberOfSolidityArgs();\n  }\n};\n\n/**\n * Should be used to create payload from arguments\n *\n * @method toPayload\n * @param {Array} solidity function params\n * @param {Object} optional payload options\n */\nSolidityFunction.prototype.toPayload = function (args) {\n  var options = {};\n  if (args.length > this._inputTypes.length && utils.isObject(args[args.length - 1])) {\n    options = args[args.length - 1];\n  }\n  this.validateArgs(args);\n  options.to = this._address;\n  options.data = '0x' + this.signature() + coder.encodeParams(this._inputTypes, args);\n  return options;\n};\n\n/**\n * Should be used to get function signature\n *\n * @method signature\n * @return {String} function signature\n */\nSolidityFunction.prototype.signature = function () {\n  return sha3(this._name).slice(0, 8);\n};\nSolidityFunction.prototype.unpackOutput = function (output) {\n  if (!output) {\n    return;\n  }\n  output = output.length >= 2 ? output.slice(2) : output;\n  var result = coder.decodeParams(this._outputTypes, output);\n  return result.length === 1 ? result[0] : result;\n};\n\n/**\n * Calls a contract function.\n *\n * @method call\n * @param {...Object} Contract function arguments\n * @param {function} If the last argument is a function, the contract function\n *   call will be asynchronous, and the callback will be passed the\n *   error and result.\n * @return {String} output bytes\n */\nSolidityFunction.prototype.call = function () {\n  var args = Array.prototype.slice.call(arguments).filter(function (a) {\n    return a !== undefined;\n  });\n  var callback = this.extractCallback(args);\n  var defaultBlock = this.extractDefaultBlock(args);\n  var payload = this.toPayload(args);\n  if (!callback) {\n    var output = this._eth.call(payload, defaultBlock);\n    return this.unpackOutput(output);\n  }\n  var self = this;\n  this._eth.call(payload, defaultBlock, function (error, output) {\n    if (error) return callback(error, null);\n    var unpacked = null;\n    try {\n      unpacked = self.unpackOutput(output);\n    } catch (e) {\n      error = e;\n    }\n    callback(error, unpacked);\n  });\n};\n\n/**\n * Should be used to sendTransaction to solidity function\n *\n * @method sendTransaction\n */\nSolidityFunction.prototype.sendTransaction = function () {\n  var args = Array.prototype.slice.call(arguments).filter(function (a) {\n    return a !== undefined;\n  });\n  var callback = this.extractCallback(args);\n  var payload = this.toPayload(args);\n  if (payload.value > 0 && !this._payable) {\n    throw new Error('Cannot send value to non-payable function');\n  }\n  if (!callback) {\n    return this._eth.sendTransaction(payload);\n  }\n  this._eth.sendTransaction(payload, callback);\n};\n\n/**\n * Should be used to estimateGas of solidity function\n *\n * @method estimateGas\n */\nSolidityFunction.prototype.estimateGas = function () {\n  var args = Array.prototype.slice.call(arguments);\n  var callback = this.extractCallback(args);\n  var payload = this.toPayload(args);\n  if (!callback) {\n    return this._eth.estimateGas(payload);\n  }\n  this._eth.estimateGas(payload, callback);\n};\n\n/**\n * Return the encoded data of the call\n *\n * @method getData\n * @return {String} the encoded data\n */\nSolidityFunction.prototype.getData = function () {\n  var args = Array.prototype.slice.call(arguments);\n  var payload = this.toPayload(args);\n  return payload.data;\n};\n\n/**\n * Should be used to get function display name\n *\n * @method displayName\n * @return {String} display name of the function\n */\nSolidityFunction.prototype.displayName = function () {\n  return utils.extractDisplayName(this._name);\n};\n\n/**\n * Should be used to get function type name\n *\n * @method typeName\n * @return {String} type name of the function\n */\nSolidityFunction.prototype.typeName = function () {\n  return utils.extractTypeName(this._name);\n};\n\n/**\n * Should be called to get rpc requests from solidity function\n *\n * @method request\n * @returns {Object}\n */\nSolidityFunction.prototype.request = function () {\n  var args = Array.prototype.slice.call(arguments);\n  var callback = this.extractCallback(args);\n  var payload = this.toPayload(args);\n  var format = this.unpackOutput.bind(this);\n  return {\n    method: this._constant ? 'eth_call' : 'eth_sendTransaction',\n    callback: callback,\n    params: [payload],\n    format: format\n  };\n};\n\n/**\n * Should be called to execute function\n *\n * @method execute\n */\nSolidityFunction.prototype.execute = function () {\n  var transaction = !this._constant;\n\n  // send transaction\n  if (transaction) {\n    return this.sendTransaction.apply(this, Array.prototype.slice.call(arguments));\n  }\n\n  // call\n  return this.call.apply(this, Array.prototype.slice.call(arguments));\n};\n\n/**\n * Should be called to attach function to contract\n *\n * @method attachToContract\n * @param {Contract}\n */\nSolidityFunction.prototype.attachToContract = function (contract) {\n  var execute = this.execute.bind(this);\n  execute.request = this.request.bind(this);\n  execute.call = this.call.bind(this);\n  execute.sendTransaction = this.sendTransaction.bind(this);\n  execute.estimateGas = this.estimateGas.bind(this);\n  execute.getData = this.getData.bind(this);\n  var displayName = this.displayName();\n  if (!contract[displayName]) {\n    contract[displayName] = execute;\n  }\n  contract[displayName][this.typeName()] = execute; // circular!!!!\n};\n\nmodule.exports = SolidityFunction;","map":{"version":3,"names":["coder","require","utils","errors","formatters","sha3","SolidityFunction","eth","json","address","_eth","_inputTypes","inputs","map","i","type","_outputTypes","outputs","_constant","stateMutability","constant","_payable","payable","_name","transformToFullName","_address","prototype","extractCallback","args","isFunction","length","pop","extractDefaultBlock","isObject","inputDefaultBlockNumberFormatter","validateArgs","inputArgs","filter","a","isArray","isBigNumber","InvalidNumberOfSolidityArgs","toPayload","options","to","data","signature","encodeParams","slice","unpackOutput","output","result","decodeParams","call","Array","arguments","undefined","callback","defaultBlock","payload","self","error","unpacked","e","sendTransaction","value","Error","estimateGas","getData","displayName","extractDisplayName","typeName","extractTypeName","request","format","bind","method","params","execute","transaction","apply","attachToContract","contract","module","exports"],"sources":["E:/Career/University at Buffalo/Semester 2/CSE_Blockchain/Project/playground/research-papers-bid/node_modules/web3/lib/web3/function.js"],"sourcesContent":["/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file function.js\n * @author Marek Kotewicz <marek@ethdev.com>\n * @date 2015\n */\n\nvar coder = require('../solidity/coder');\nvar utils = require('../utils/utils');\nvar errors = require('./errors');\nvar formatters = require('./formatters');\nvar sha3 = require('../utils/sha3');\n\n/**\n * This prototype should be used to call/sendTransaction to solidity functions\n */\nvar SolidityFunction = function (eth, json, address) {\n    this._eth = eth;\n    this._inputTypes = json.inputs.map(function (i) {\n        return i.type;\n    });\n    this._outputTypes = json.outputs.map(function (i) {\n        return i.type;\n    });\n    this._constant = (json.stateMutability === \"view\" || json.stateMutability === \"pure\" || json.constant);\n    this._payable = (json.stateMutability === \"payable\" || json.payable);\n    this._name = utils.transformToFullName(json);\n    this._address = address;\n};\n\nSolidityFunction.prototype.extractCallback = function (args) {\n    if (utils.isFunction(args[args.length - 1])) {\n        return args.pop(); // modify the args array!\n    }\n};\n\nSolidityFunction.prototype.extractDefaultBlock = function (args) {\n    if (args.length > this._inputTypes.length && !utils.isObject(args[args.length -1])) {\n        return formatters.inputDefaultBlockNumberFormatter(args.pop()); // modify the args array!\n    }\n};\n\n/**\n * Should be called to check if the number of arguments is correct\n *\n * @method validateArgs\n * @param {Array} arguments\n * @throws {Error} if it is not\n */\nSolidityFunction.prototype.validateArgs = function (args) {\n    var inputArgs = args.filter(function (a) {\n      // filter the options object but not arguments that are arrays\n      return !( (utils.isObject(a) === true) &&\n                (utils.isArray(a) === false) &&\n                (utils.isBigNumber(a) === false)\n              );\n    });\n    if (inputArgs.length !== this._inputTypes.length) {\n        throw errors.InvalidNumberOfSolidityArgs();\n    }\n};\n\n/**\n * Should be used to create payload from arguments\n *\n * @method toPayload\n * @param {Array} solidity function params\n * @param {Object} optional payload options\n */\nSolidityFunction.prototype.toPayload = function (args) {\n    var options = {};\n    if (args.length > this._inputTypes.length && utils.isObject(args[args.length -1])) {\n        options = args[args.length - 1];\n    }\n    this.validateArgs(args);\n    options.to = this._address;\n    options.data = '0x' + this.signature() + coder.encodeParams(this._inputTypes, args);\n    return options;\n};\n\n/**\n * Should be used to get function signature\n *\n * @method signature\n * @return {String} function signature\n */\nSolidityFunction.prototype.signature = function () {\n    return sha3(this._name).slice(0, 8);\n};\n\n\nSolidityFunction.prototype.unpackOutput = function (output) {\n    if (!output) {\n        return;\n    }\n\n    output = output.length >= 2 ? output.slice(2) : output;\n    var result = coder.decodeParams(this._outputTypes, output);\n    return result.length === 1 ? result[0] : result;\n};\n\n/**\n * Calls a contract function.\n *\n * @method call\n * @param {...Object} Contract function arguments\n * @param {function} If the last argument is a function, the contract function\n *   call will be asynchronous, and the callback will be passed the\n *   error and result.\n * @return {String} output bytes\n */\nSolidityFunction.prototype.call = function () {\n    var args = Array.prototype.slice.call(arguments).filter(function (a) {return a !== undefined; });\n    var callback = this.extractCallback(args);\n    var defaultBlock = this.extractDefaultBlock(args);\n    var payload = this.toPayload(args);\n\n\n    if (!callback) {\n        var output = this._eth.call(payload, defaultBlock);\n        return this.unpackOutput(output);\n    }\n\n    var self = this;\n    this._eth.call(payload, defaultBlock, function (error, output) {\n        if (error) return callback(error, null);\n\n        var unpacked = null;\n        try {\n            unpacked = self.unpackOutput(output);\n        }\n        catch (e) {\n            error = e;\n        }\n\n        callback(error, unpacked);\n    });\n};\n\n/**\n * Should be used to sendTransaction to solidity function\n *\n * @method sendTransaction\n */\nSolidityFunction.prototype.sendTransaction = function () {\n    var args = Array.prototype.slice.call(arguments).filter(function (a) {return a !== undefined; });\n    var callback = this.extractCallback(args);\n    var payload = this.toPayload(args);\n\n    if (payload.value > 0 && !this._payable) {\n        throw new Error('Cannot send value to non-payable function');\n    }\n\n    if (!callback) {\n        return this._eth.sendTransaction(payload);\n    }\n\n    this._eth.sendTransaction(payload, callback);\n};\n\n/**\n * Should be used to estimateGas of solidity function\n *\n * @method estimateGas\n */\nSolidityFunction.prototype.estimateGas = function () {\n    var args = Array.prototype.slice.call(arguments);\n    var callback = this.extractCallback(args);\n    var payload = this.toPayload(args);\n\n    if (!callback) {\n        return this._eth.estimateGas(payload);\n    }\n\n    this._eth.estimateGas(payload, callback);\n};\n\n/**\n * Return the encoded data of the call\n *\n * @method getData\n * @return {String} the encoded data\n */\nSolidityFunction.prototype.getData = function () {\n    var args = Array.prototype.slice.call(arguments);\n    var payload = this.toPayload(args);\n\n    return payload.data;\n};\n\n/**\n * Should be used to get function display name\n *\n * @method displayName\n * @return {String} display name of the function\n */\nSolidityFunction.prototype.displayName = function () {\n    return utils.extractDisplayName(this._name);\n};\n\n/**\n * Should be used to get function type name\n *\n * @method typeName\n * @return {String} type name of the function\n */\nSolidityFunction.prototype.typeName = function () {\n    return utils.extractTypeName(this._name);\n};\n\n/**\n * Should be called to get rpc requests from solidity function\n *\n * @method request\n * @returns {Object}\n */\nSolidityFunction.prototype.request = function () {\n    var args = Array.prototype.slice.call(arguments);\n    var callback = this.extractCallback(args);\n    var payload = this.toPayload(args);\n    var format = this.unpackOutput.bind(this);\n\n    return {\n        method: this._constant ? 'eth_call' : 'eth_sendTransaction',\n        callback: callback,\n        params: [payload],\n        format: format\n    };\n};\n\n/**\n * Should be called to execute function\n *\n * @method execute\n */\nSolidityFunction.prototype.execute = function () {\n    var transaction = !this._constant;\n\n    // send transaction\n    if (transaction) {\n        return this.sendTransaction.apply(this, Array.prototype.slice.call(arguments));\n    }\n\n    // call\n    return this.call.apply(this, Array.prototype.slice.call(arguments));\n};\n\n/**\n * Should be called to attach function to contract\n *\n * @method attachToContract\n * @param {Contract}\n */\nSolidityFunction.prototype.attachToContract = function (contract) {\n    var execute = this.execute.bind(this);\n    execute.request = this.request.bind(this);\n    execute.call = this.call.bind(this);\n    execute.sendTransaction = this.sendTransaction.bind(this);\n    execute.estimateGas = this.estimateGas.bind(this);\n    execute.getData = this.getData.bind(this);\n    var displayName = this.displayName();\n    if (!contract[displayName]) {\n        contract[displayName] = execute;\n    }\n    contract[displayName][this.typeName()] = execute; // circular!!!!\n};\n\nmodule.exports = SolidityFunction;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,KAAK,GAAGC,OAAO,CAAC,mBAAmB,CAAC;AACxC,IAAIC,KAAK,GAAGD,OAAO,CAAC,gBAAgB,CAAC;AACrC,IAAIE,MAAM,GAAGF,OAAO,CAAC,UAAU,CAAC;AAChC,IAAIG,UAAU,GAAGH,OAAO,CAAC,cAAc,CAAC;AACxC,IAAII,IAAI,GAAGJ,OAAO,CAAC,eAAe,CAAC;;AAEnC;AACA;AACA;AACA,IAAIK,gBAAgB,GAAG,SAAAA,CAAUC,GAAG,EAAEC,IAAI,EAAEC,OAAO,EAAE;EACjD,IAAI,CAACC,IAAI,GAAGH,GAAG;EACf,IAAI,CAACI,WAAW,GAAGH,IAAI,CAACI,MAAM,CAACC,GAAG,CAAC,UAAUC,CAAC,EAAE;IAC5C,OAAOA,CAAC,CAACC,IAAI;EACjB,CAAC,CAAC;EACF,IAAI,CAACC,YAAY,GAAGR,IAAI,CAACS,OAAO,CAACJ,GAAG,CAAC,UAAUC,CAAC,EAAE;IAC9C,OAAOA,CAAC,CAACC,IAAI;EACjB,CAAC,CAAC;EACF,IAAI,CAACG,SAAS,GAAIV,IAAI,CAACW,eAAe,KAAK,MAAM,IAAIX,IAAI,CAACW,eAAe,KAAK,MAAM,IAAIX,IAAI,CAACY,QAAS;EACtG,IAAI,CAACC,QAAQ,GAAIb,IAAI,CAACW,eAAe,KAAK,SAAS,IAAIX,IAAI,CAACc,OAAQ;EACpE,IAAI,CAACC,KAAK,GAAGrB,KAAK,CAACsB,mBAAmB,CAAChB,IAAI,CAAC;EAC5C,IAAI,CAACiB,QAAQ,GAAGhB,OAAO;AAC3B,CAAC;AAEDH,gBAAgB,CAACoB,SAAS,CAACC,eAAe,GAAG,UAAUC,IAAI,EAAE;EACzD,IAAI1B,KAAK,CAAC2B,UAAU,CAACD,IAAI,CAACA,IAAI,CAACE,MAAM,GAAG,CAAC,CAAC,CAAC,EAAE;IACzC,OAAOF,IAAI,CAACG,GAAG,EAAE,CAAC,CAAC;EACvB;AACJ,CAAC;;AAEDzB,gBAAgB,CAACoB,SAAS,CAACM,mBAAmB,GAAG,UAAUJ,IAAI,EAAE;EAC7D,IAAIA,IAAI,CAACE,MAAM,GAAG,IAAI,CAACnB,WAAW,CAACmB,MAAM,IAAI,CAAC5B,KAAK,CAAC+B,QAAQ,CAACL,IAAI,CAACA,IAAI,CAACE,MAAM,GAAE,CAAC,CAAC,CAAC,EAAE;IAChF,OAAO1B,UAAU,CAAC8B,gCAAgC,CAACN,IAAI,CAACG,GAAG,EAAE,CAAC,CAAC,CAAC;EACpE;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACAzB,gBAAgB,CAACoB,SAAS,CAACS,YAAY,GAAG,UAAUP,IAAI,EAAE;EACtD,IAAIQ,SAAS,GAAGR,IAAI,CAACS,MAAM,CAAC,UAAUC,CAAC,EAAE;IACvC;IACA,OAAO,EAAIpC,KAAK,CAAC+B,QAAQ,CAACK,CAAC,CAAC,KAAK,IAAI,IAC1BpC,KAAK,CAACqC,OAAO,CAACD,CAAC,CAAC,KAAK,KAAM,IAC3BpC,KAAK,CAACsC,WAAW,CAACF,CAAC,CAAC,KAAK,KAAM,CACjC;EACX,CAAC,CAAC;EACF,IAAIF,SAAS,CAACN,MAAM,KAAK,IAAI,CAACnB,WAAW,CAACmB,MAAM,EAAE;IAC9C,MAAM3B,MAAM,CAACsC,2BAA2B,EAAE;EAC9C;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACAnC,gBAAgB,CAACoB,SAAS,CAACgB,SAAS,GAAG,UAAUd,IAAI,EAAE;EACnD,IAAIe,OAAO,GAAG,CAAC,CAAC;EAChB,IAAIf,IAAI,CAACE,MAAM,GAAG,IAAI,CAACnB,WAAW,CAACmB,MAAM,IAAI5B,KAAK,CAAC+B,QAAQ,CAACL,IAAI,CAACA,IAAI,CAACE,MAAM,GAAE,CAAC,CAAC,CAAC,EAAE;IAC/Ea,OAAO,GAAGf,IAAI,CAACA,IAAI,CAACE,MAAM,GAAG,CAAC,CAAC;EACnC;EACA,IAAI,CAACK,YAAY,CAACP,IAAI,CAAC;EACvBe,OAAO,CAACC,EAAE,GAAG,IAAI,CAACnB,QAAQ;EAC1BkB,OAAO,CAACE,IAAI,GAAG,IAAI,GAAG,IAAI,CAACC,SAAS,EAAE,GAAG9C,KAAK,CAAC+C,YAAY,CAAC,IAAI,CAACpC,WAAW,EAAEiB,IAAI,CAAC;EACnF,OAAOe,OAAO;AAClB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACArC,gBAAgB,CAACoB,SAAS,CAACoB,SAAS,GAAG,YAAY;EAC/C,OAAOzC,IAAI,CAAC,IAAI,CAACkB,KAAK,CAAC,CAACyB,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;AACvC,CAAC;AAGD1C,gBAAgB,CAACoB,SAAS,CAACuB,YAAY,GAAG,UAAUC,MAAM,EAAE;EACxD,IAAI,CAACA,MAAM,EAAE;IACT;EACJ;EAEAA,MAAM,GAAGA,MAAM,CAACpB,MAAM,IAAI,CAAC,GAAGoB,MAAM,CAACF,KAAK,CAAC,CAAC,CAAC,GAAGE,MAAM;EACtD,IAAIC,MAAM,GAAGnD,KAAK,CAACoD,YAAY,CAAC,IAAI,CAACpC,YAAY,EAAEkC,MAAM,CAAC;EAC1D,OAAOC,MAAM,CAACrB,MAAM,KAAK,CAAC,GAAGqB,MAAM,CAAC,CAAC,CAAC,GAAGA,MAAM;AACnD,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA7C,gBAAgB,CAACoB,SAAS,CAAC2B,IAAI,GAAG,YAAY;EAC1C,IAAIzB,IAAI,GAAG0B,KAAK,CAAC5B,SAAS,CAACsB,KAAK,CAACK,IAAI,CAACE,SAAS,CAAC,CAAClB,MAAM,CAAC,UAAUC,CAAC,EAAE;IAAC,OAAOA,CAAC,KAAKkB,SAAS;EAAE,CAAC,CAAC;EAChG,IAAIC,QAAQ,GAAG,IAAI,CAAC9B,eAAe,CAACC,IAAI,CAAC;EACzC,IAAI8B,YAAY,GAAG,IAAI,CAAC1B,mBAAmB,CAACJ,IAAI,CAAC;EACjD,IAAI+B,OAAO,GAAG,IAAI,CAACjB,SAAS,CAACd,IAAI,CAAC;EAGlC,IAAI,CAAC6B,QAAQ,EAAE;IACX,IAAIP,MAAM,GAAG,IAAI,CAACxC,IAAI,CAAC2C,IAAI,CAACM,OAAO,EAAED,YAAY,CAAC;IAClD,OAAO,IAAI,CAACT,YAAY,CAACC,MAAM,CAAC;EACpC;EAEA,IAAIU,IAAI,GAAG,IAAI;EACf,IAAI,CAAClD,IAAI,CAAC2C,IAAI,CAACM,OAAO,EAAED,YAAY,EAAE,UAAUG,KAAK,EAAEX,MAAM,EAAE;IAC3D,IAAIW,KAAK,EAAE,OAAOJ,QAAQ,CAACI,KAAK,EAAE,IAAI,CAAC;IAEvC,IAAIC,QAAQ,GAAG,IAAI;IACnB,IAAI;MACAA,QAAQ,GAAGF,IAAI,CAACX,YAAY,CAACC,MAAM,CAAC;IACxC,CAAC,CACD,OAAOa,CAAC,EAAE;MACNF,KAAK,GAAGE,CAAC;IACb;IAEAN,QAAQ,CAACI,KAAK,EAAEC,QAAQ,CAAC;EAC7B,CAAC,CAAC;AACN,CAAC;;AAED;AACA;AACA;AACA;AACA;AACAxD,gBAAgB,CAACoB,SAAS,CAACsC,eAAe,GAAG,YAAY;EACrD,IAAIpC,IAAI,GAAG0B,KAAK,CAAC5B,SAAS,CAACsB,KAAK,CAACK,IAAI,CAACE,SAAS,CAAC,CAAClB,MAAM,CAAC,UAAUC,CAAC,EAAE;IAAC,OAAOA,CAAC,KAAKkB,SAAS;EAAE,CAAC,CAAC;EAChG,IAAIC,QAAQ,GAAG,IAAI,CAAC9B,eAAe,CAACC,IAAI,CAAC;EACzC,IAAI+B,OAAO,GAAG,IAAI,CAACjB,SAAS,CAACd,IAAI,CAAC;EAElC,IAAI+B,OAAO,CAACM,KAAK,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC5C,QAAQ,EAAE;IACrC,MAAM,IAAI6C,KAAK,CAAC,2CAA2C,CAAC;EAChE;EAEA,IAAI,CAACT,QAAQ,EAAE;IACX,OAAO,IAAI,CAAC/C,IAAI,CAACsD,eAAe,CAACL,OAAO,CAAC;EAC7C;EAEA,IAAI,CAACjD,IAAI,CAACsD,eAAe,CAACL,OAAO,EAAEF,QAAQ,CAAC;AAChD,CAAC;;AAED;AACA;AACA;AACA;AACA;AACAnD,gBAAgB,CAACoB,SAAS,CAACyC,WAAW,GAAG,YAAY;EACjD,IAAIvC,IAAI,GAAG0B,KAAK,CAAC5B,SAAS,CAACsB,KAAK,CAACK,IAAI,CAACE,SAAS,CAAC;EAChD,IAAIE,QAAQ,GAAG,IAAI,CAAC9B,eAAe,CAACC,IAAI,CAAC;EACzC,IAAI+B,OAAO,GAAG,IAAI,CAACjB,SAAS,CAACd,IAAI,CAAC;EAElC,IAAI,CAAC6B,QAAQ,EAAE;IACX,OAAO,IAAI,CAAC/C,IAAI,CAACyD,WAAW,CAACR,OAAO,CAAC;EACzC;EAEA,IAAI,CAACjD,IAAI,CAACyD,WAAW,CAACR,OAAO,EAAEF,QAAQ,CAAC;AAC5C,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACAnD,gBAAgB,CAACoB,SAAS,CAAC0C,OAAO,GAAG,YAAY;EAC7C,IAAIxC,IAAI,GAAG0B,KAAK,CAAC5B,SAAS,CAACsB,KAAK,CAACK,IAAI,CAACE,SAAS,CAAC;EAChD,IAAII,OAAO,GAAG,IAAI,CAACjB,SAAS,CAACd,IAAI,CAAC;EAElC,OAAO+B,OAAO,CAACd,IAAI;AACvB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACAvC,gBAAgB,CAACoB,SAAS,CAAC2C,WAAW,GAAG,YAAY;EACjD,OAAOnE,KAAK,CAACoE,kBAAkB,CAAC,IAAI,CAAC/C,KAAK,CAAC;AAC/C,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACAjB,gBAAgB,CAACoB,SAAS,CAAC6C,QAAQ,GAAG,YAAY;EAC9C,OAAOrE,KAAK,CAACsE,eAAe,CAAC,IAAI,CAACjD,KAAK,CAAC;AAC5C,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACAjB,gBAAgB,CAACoB,SAAS,CAAC+C,OAAO,GAAG,YAAY;EAC7C,IAAI7C,IAAI,GAAG0B,KAAK,CAAC5B,SAAS,CAACsB,KAAK,CAACK,IAAI,CAACE,SAAS,CAAC;EAChD,IAAIE,QAAQ,GAAG,IAAI,CAAC9B,eAAe,CAACC,IAAI,CAAC;EACzC,IAAI+B,OAAO,GAAG,IAAI,CAACjB,SAAS,CAACd,IAAI,CAAC;EAClC,IAAI8C,MAAM,GAAG,IAAI,CAACzB,YAAY,CAAC0B,IAAI,CAAC,IAAI,CAAC;EAEzC,OAAO;IACHC,MAAM,EAAE,IAAI,CAAC1D,SAAS,GAAG,UAAU,GAAG,qBAAqB;IAC3DuC,QAAQ,EAAEA,QAAQ;IAClBoB,MAAM,EAAE,CAAClB,OAAO,CAAC;IACjBe,MAAM,EAAEA;EACZ,CAAC;AACL,CAAC;;AAED;AACA;AACA;AACA;AACA;AACApE,gBAAgB,CAACoB,SAAS,CAACoD,OAAO,GAAG,YAAY;EAC7C,IAAIC,WAAW,GAAG,CAAC,IAAI,CAAC7D,SAAS;;EAEjC;EACA,IAAI6D,WAAW,EAAE;IACb,OAAO,IAAI,CAACf,eAAe,CAACgB,KAAK,CAAC,IAAI,EAAE1B,KAAK,CAAC5B,SAAS,CAACsB,KAAK,CAACK,IAAI,CAACE,SAAS,CAAC,CAAC;EAClF;;EAEA;EACA,OAAO,IAAI,CAACF,IAAI,CAAC2B,KAAK,CAAC,IAAI,EAAE1B,KAAK,CAAC5B,SAAS,CAACsB,KAAK,CAACK,IAAI,CAACE,SAAS,CAAC,CAAC;AACvE,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACAjD,gBAAgB,CAACoB,SAAS,CAACuD,gBAAgB,GAAG,UAAUC,QAAQ,EAAE;EAC9D,IAAIJ,OAAO,GAAG,IAAI,CAACA,OAAO,CAACH,IAAI,CAAC,IAAI,CAAC;EACrCG,OAAO,CAACL,OAAO,GAAG,IAAI,CAACA,OAAO,CAACE,IAAI,CAAC,IAAI,CAAC;EACzCG,OAAO,CAACzB,IAAI,GAAG,IAAI,CAACA,IAAI,CAACsB,IAAI,CAAC,IAAI,CAAC;EACnCG,OAAO,CAACd,eAAe,GAAG,IAAI,CAACA,eAAe,CAACW,IAAI,CAAC,IAAI,CAAC;EACzDG,OAAO,CAACX,WAAW,GAAG,IAAI,CAACA,WAAW,CAACQ,IAAI,CAAC,IAAI,CAAC;EACjDG,OAAO,CAACV,OAAO,GAAG,IAAI,CAACA,OAAO,CAACO,IAAI,CAAC,IAAI,CAAC;EACzC,IAAIN,WAAW,GAAG,IAAI,CAACA,WAAW,EAAE;EACpC,IAAI,CAACa,QAAQ,CAACb,WAAW,CAAC,EAAE;IACxBa,QAAQ,CAACb,WAAW,CAAC,GAAGS,OAAO;EACnC;EACAI,QAAQ,CAACb,WAAW,CAAC,CAAC,IAAI,CAACE,QAAQ,EAAE,CAAC,GAAGO,OAAO,CAAC,CAAC;AACtD,CAAC;;AAEDK,MAAM,CAACC,OAAO,GAAG9E,gBAAgB"},"metadata":{},"sourceType":"script","externalDependencies":[]}