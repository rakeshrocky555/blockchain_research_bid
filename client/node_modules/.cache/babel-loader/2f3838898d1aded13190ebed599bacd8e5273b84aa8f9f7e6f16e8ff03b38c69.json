{"ast":null,"code":"/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file property.js\n * @author Fabian Vogelsteller <fabian@frozeman.de>\n * @author Marek Kotewicz <marek@ethdev.com>\n * @date 2015\n */\n\nvar utils = require('../utils/utils');\nvar Property = function (options) {\n  this.name = options.name;\n  this.getter = options.getter;\n  this.setter = options.setter;\n  this.outputFormatter = options.outputFormatter;\n  this.inputFormatter = options.inputFormatter;\n  this.requestManager = null;\n};\nProperty.prototype.setRequestManager = function (rm) {\n  this.requestManager = rm;\n};\n\n/**\n * Should be called to format input args of method\n *\n * @method formatInput\n * @param {Array}\n * @return {Array}\n */\nProperty.prototype.formatInput = function (arg) {\n  return this.inputFormatter ? this.inputFormatter(arg) : arg;\n};\n\n/**\n * Should be called to format output(result) of method\n *\n * @method formatOutput\n * @param {Object}\n * @return {Object}\n */\nProperty.prototype.formatOutput = function (result) {\n  return this.outputFormatter && result !== null && result !== undefined ? this.outputFormatter(result) : result;\n};\n\n/**\n * Should be used to extract callback from array of arguments. Modifies input param\n *\n * @method extractCallback\n * @param {Array} arguments\n * @return {Function|Null} callback, if exists\n */\nProperty.prototype.extractCallback = function (args) {\n  if (utils.isFunction(args[args.length - 1])) {\n    return args.pop(); // modify the args array!\n  }\n};\n\n/**\n * Should attach function to method\n *\n * @method attachToObject\n * @param {Object}\n * @param {Function}\n */\nProperty.prototype.attachToObject = function (obj) {\n  var proto = {\n    get: this.buildGet(),\n    enumerable: true\n  };\n  var names = this.name.split('.');\n  var name = names[0];\n  if (names.length > 1) {\n    obj[names[0]] = obj[names[0]] || {};\n    obj = obj[names[0]];\n    name = names[1];\n  }\n  Object.defineProperty(obj, name, proto);\n  obj[asyncGetterName(name)] = this.buildAsyncGet();\n};\nvar asyncGetterName = function (name) {\n  return 'get' + name.charAt(0).toUpperCase() + name.slice(1);\n};\nProperty.prototype.buildGet = function () {\n  var property = this;\n  return function get() {\n    return property.formatOutput(property.requestManager.send({\n      method: property.getter\n    }));\n  };\n};\nProperty.prototype.buildAsyncGet = function () {\n  var property = this;\n  var get = function (callback) {\n    property.requestManager.sendAsync({\n      method: property.getter\n    }, function (err, result) {\n      callback(err, property.formatOutput(result));\n    });\n  };\n  get.request = this.request.bind(this);\n  return get;\n};\n\n/**\n * Should be called to create pure JSONRPC request which can be used in batch request\n *\n * @method request\n * @param {...} params\n * @return {Object} jsonrpc request\n */\nProperty.prototype.request = function () {\n  var payload = {\n    method: this.getter,\n    params: [],\n    callback: this.extractCallback(Array.prototype.slice.call(arguments))\n  };\n  payload.format = this.formatOutput.bind(this);\n  return payload;\n};\nmodule.exports = Property;","map":{"version":3,"names":["utils","require","Property","options","name","getter","setter","outputFormatter","inputFormatter","requestManager","prototype","setRequestManager","rm","formatInput","arg","formatOutput","result","undefined","extractCallback","args","isFunction","length","pop","attachToObject","obj","proto","get","buildGet","enumerable","names","split","Object","defineProperty","asyncGetterName","buildAsyncGet","charAt","toUpperCase","slice","property","send","method","callback","sendAsync","err","request","bind","payload","params","Array","call","arguments","format","module","exports"],"sources":["E:/Career/University at Buffalo/Semester 2/CSE_Blockchain/Project/playground/research-papers-bid/node_modules/web3/lib/web3/property.js"],"sourcesContent":["/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file property.js\n * @author Fabian Vogelsteller <fabian@frozeman.de>\n * @author Marek Kotewicz <marek@ethdev.com>\n * @date 2015\n */\n\nvar utils = require('../utils/utils');\n\nvar Property = function (options) {\n    this.name = options.name;\n    this.getter = options.getter;\n    this.setter = options.setter;\n    this.outputFormatter = options.outputFormatter;\n    this.inputFormatter = options.inputFormatter;\n    this.requestManager = null;\n};\n\nProperty.prototype.setRequestManager = function (rm) {\n    this.requestManager = rm;\n};\n\n/**\n * Should be called to format input args of method\n *\n * @method formatInput\n * @param {Array}\n * @return {Array}\n */\nProperty.prototype.formatInput = function (arg) {\n    return this.inputFormatter ? this.inputFormatter(arg) : arg;\n};\n\n/**\n * Should be called to format output(result) of method\n *\n * @method formatOutput\n * @param {Object}\n * @return {Object}\n */\nProperty.prototype.formatOutput = function (result) {\n    return this.outputFormatter && result !== null && result !== undefined ? this.outputFormatter(result) : result;\n};\n\n/**\n * Should be used to extract callback from array of arguments. Modifies input param\n *\n * @method extractCallback\n * @param {Array} arguments\n * @return {Function|Null} callback, if exists\n */\nProperty.prototype.extractCallback = function (args) {\n    if (utils.isFunction(args[args.length - 1])) {\n        return args.pop(); // modify the args array!\n    }\n};\n\n\n/**\n * Should attach function to method\n *\n * @method attachToObject\n * @param {Object}\n * @param {Function}\n */\nProperty.prototype.attachToObject = function (obj) {\n    var proto = {\n        get: this.buildGet(),\n        enumerable: true\n    };\n\n    var names = this.name.split('.');\n    var name = names[0];\n    if (names.length > 1) {\n        obj[names[0]] = obj[names[0]] || {};\n        obj = obj[names[0]];\n        name = names[1];\n    }\n\n    Object.defineProperty(obj, name, proto);\n    obj[asyncGetterName(name)] = this.buildAsyncGet();\n};\n\nvar asyncGetterName = function (name) {\n    return 'get' + name.charAt(0).toUpperCase() + name.slice(1);\n};\n\nProperty.prototype.buildGet = function () {\n    var property = this;\n    return function get() {\n        return property.formatOutput(property.requestManager.send({\n            method: property.getter\n        }));\n    };\n};\n\nProperty.prototype.buildAsyncGet = function () {\n    var property = this;\n    var get = function (callback) {\n        property.requestManager.sendAsync({\n            method: property.getter\n        }, function (err, result) {\n            callback(err, property.formatOutput(result));\n        });\n    };\n    get.request = this.request.bind(this);\n    return get;\n};\n\n/**\n * Should be called to create pure JSONRPC request which can be used in batch request\n *\n * @method request\n * @param {...} params\n * @return {Object} jsonrpc request\n */\nProperty.prototype.request = function () {\n    var payload = {\n        method: this.getter,\n        params: [],\n        callback: this.extractCallback(Array.prototype.slice.call(arguments))\n    };\n    payload.format = this.formatOutput.bind(this);\n    return payload;\n};\n\nmodule.exports = Property;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}