{"ast":null,"code":"/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file bzz.js\n * @author Alex Beregszaszi <alex@rtfs.hu>\n * @date 2016\n *\n * Reference: https://github.com/ethereum/go-ethereum/blob/swarm/internal/web3ext/web3ext.go#L33\n */\n\n\"use strict\";\n\nvar Method = require('../method');\nvar Property = require('../property');\nfunction Swarm(web3) {\n  this._requestManager = web3._requestManager;\n  var self = this;\n  methods().forEach(function (method) {\n    method.attachToObject(self);\n    method.setRequestManager(self._requestManager);\n  });\n  properties().forEach(function (p) {\n    p.attachToObject(self);\n    p.setRequestManager(self._requestManager);\n  });\n}\nvar methods = function () {\n  var blockNetworkRead = new Method({\n    name: 'blockNetworkRead',\n    call: 'bzz_blockNetworkRead',\n    params: 1,\n    inputFormatter: [null]\n  });\n  var syncEnabled = new Method({\n    name: 'syncEnabled',\n    call: 'bzz_syncEnabled',\n    params: 1,\n    inputFormatter: [null]\n  });\n  var swapEnabled = new Method({\n    name: 'swapEnabled',\n    call: 'bzz_swapEnabled',\n    params: 1,\n    inputFormatter: [null]\n  });\n  var download = new Method({\n    name: 'download',\n    call: 'bzz_download',\n    params: 2,\n    inputFormatter: [null, null]\n  });\n  var upload = new Method({\n    name: 'upload',\n    call: 'bzz_upload',\n    params: 2,\n    inputFormatter: [null, null]\n  });\n  var retrieve = new Method({\n    name: 'retrieve',\n    call: 'bzz_retrieve',\n    params: 1,\n    inputFormatter: [null]\n  });\n  var store = new Method({\n    name: 'store',\n    call: 'bzz_store',\n    params: 2,\n    inputFormatter: [null, null]\n  });\n  var get = new Method({\n    name: 'get',\n    call: 'bzz_get',\n    params: 1,\n    inputFormatter: [null]\n  });\n  var put = new Method({\n    name: 'put',\n    call: 'bzz_put',\n    params: 2,\n    inputFormatter: [null, null]\n  });\n  var modify = new Method({\n    name: 'modify',\n    call: 'bzz_modify',\n    params: 4,\n    inputFormatter: [null, null, null, null]\n  });\n  return [blockNetworkRead, syncEnabled, swapEnabled, download, upload, retrieve, store, get, put, modify];\n};\nvar properties = function () {\n  return [new Property({\n    name: 'hive',\n    getter: 'bzz_hive'\n  }), new Property({\n    name: 'info',\n    getter: 'bzz_info'\n  })];\n};\nmodule.exports = Swarm;","map":{"version":3,"names":["Method","require","Property","Swarm","web3","_requestManager","self","methods","forEach","method","attachToObject","setRequestManager","properties","p","blockNetworkRead","name","call","params","inputFormatter","syncEnabled","swapEnabled","download","upload","retrieve","store","get","put","modify","getter","module","exports"],"sources":["E:/Career/University at Buffalo/Semester 2/CSE_Blockchain/Project/playground/research-papers-bid/node_modules/web3/lib/web3/methods/swarm.js"],"sourcesContent":["/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file bzz.js\n * @author Alex Beregszaszi <alex@rtfs.hu>\n * @date 2016\n *\n * Reference: https://github.com/ethereum/go-ethereum/blob/swarm/internal/web3ext/web3ext.go#L33\n */\n\n\"use strict\";\n\nvar Method = require('../method');\nvar Property = require('../property');\n\nfunction Swarm(web3) {\n    this._requestManager = web3._requestManager;\n\n    var self = this;\n\n    methods().forEach(function(method) {\n        method.attachToObject(self);\n        method.setRequestManager(self._requestManager);\n    });\n\n    properties().forEach(function(p) {\n        p.attachToObject(self);\n        p.setRequestManager(self._requestManager);\n    });\n}\n\nvar methods = function () {\n    var blockNetworkRead = new Method({\n        name: 'blockNetworkRead',\n        call: 'bzz_blockNetworkRead',\n        params: 1,\n        inputFormatter: [null]\n    });\n\n    var syncEnabled = new Method({\n        name: 'syncEnabled',\n        call: 'bzz_syncEnabled',\n        params: 1,\n        inputFormatter: [null]\n    });\n\n    var swapEnabled = new Method({\n        name: 'swapEnabled',\n        call: 'bzz_swapEnabled',\n        params: 1,\n        inputFormatter: [null]\n    });\n\n    var download = new Method({\n        name: 'download',\n        call: 'bzz_download',\n        params: 2,\n        inputFormatter: [null, null]\n    });\n\n    var upload = new Method({\n        name: 'upload',\n        call: 'bzz_upload',\n        params: 2,\n        inputFormatter: [null, null]\n    });\n\n    var retrieve = new Method({\n        name: 'retrieve',\n        call: 'bzz_retrieve',\n        params: 1,\n        inputFormatter: [null]\n    });\n\n    var store = new Method({\n        name: 'store',\n        call: 'bzz_store',\n        params: 2,\n        inputFormatter: [null, null]\n    });\n\n    var get = new Method({\n        name: 'get',\n        call: 'bzz_get',\n        params: 1,\n        inputFormatter: [null]\n    });\n\n    var put = new Method({\n        name: 'put',\n        call: 'bzz_put',\n        params: 2,\n        inputFormatter: [null, null]\n    });\n\n    var modify = new Method({\n        name: 'modify',\n        call: 'bzz_modify',\n        params: 4,\n        inputFormatter: [null, null, null, null]\n    });\n\n    return [\n        blockNetworkRead,\n        syncEnabled,\n        swapEnabled,\n        download,\n        upload,\n        retrieve,\n        store,\n        get,\n        put,\n        modify\n    ];\n};\n\nvar properties = function () {\n    return [\n        new Property({\n            name: 'hive',\n            getter: 'bzz_hive'\n        }),\n        new Property({\n            name: 'info',\n            getter: 'bzz_info'\n        })\n    ];\n};\n\n\nmodule.exports = Swarm;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}