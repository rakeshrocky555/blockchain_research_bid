{"ast":null,"code":"/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file event.js\n * @author Marek Kotewicz <marek@ethdev.com>\n * @date 2014\n */\n\nvar utils = require('../utils/utils');\nvar coder = require('../solidity/coder');\nvar formatters = require('./formatters');\nvar sha3 = require('../utils/sha3');\nvar Filter = require('./filter');\nvar watches = require('./methods/watches');\n\n/**\n * This prototype should be used to create event filters\n */\nvar SolidityEvent = function (requestManager, json, address) {\n  this._requestManager = requestManager;\n  this._params = json.inputs;\n  this._name = utils.transformToFullName(json);\n  this._address = address;\n  this._anonymous = json.anonymous;\n};\n\n/**\n * Should be used to get filtered param types\n *\n * @method types\n * @param {Bool} decide if returned typed should be indexed\n * @return {Array} array of types\n */\nSolidityEvent.prototype.types = function (indexed) {\n  return this._params.filter(function (i) {\n    return i.indexed === indexed;\n  }).map(function (i) {\n    return i.type;\n  });\n};\n\n/**\n * Should be used to get event display name\n *\n * @method displayName\n * @return {String} event display name\n */\nSolidityEvent.prototype.displayName = function () {\n  return utils.extractDisplayName(this._name);\n};\n\n/**\n * Should be used to get event type name\n *\n * @method typeName\n * @return {String} event type name\n */\nSolidityEvent.prototype.typeName = function () {\n  return utils.extractTypeName(this._name);\n};\n\n/**\n * Should be used to get event signature\n *\n * @method signature\n * @return {String} event signature\n */\nSolidityEvent.prototype.signature = function () {\n  return sha3(this._name);\n};\n\n/**\n * Should be used to encode indexed params and options to one final object\n *\n * @method encode\n * @param {Object} indexed\n * @param {Object} options\n * @return {Object} everything combined together and encoded\n */\nSolidityEvent.prototype.encode = function (indexed, options) {\n  indexed = indexed || {};\n  options = options || {};\n  var result = {};\n  ['fromBlock', 'toBlock'].filter(function (f) {\n    return options[f] !== undefined;\n  }).forEach(function (f) {\n    result[f] = formatters.inputBlockNumberFormatter(options[f]);\n  });\n  result.topics = [];\n  result.address = this._address;\n  if (!this._anonymous) {\n    result.topics.push('0x' + this.signature());\n  }\n  var indexedTopics = this._params.filter(function (i) {\n    return i.indexed === true;\n  }).map(function (i) {\n    var value = indexed[i.name];\n    if (value === undefined || value === null) {\n      return null;\n    }\n    if (utils.isArray(value)) {\n      return value.map(function (v) {\n        return '0x' + coder.encodeParam(i.type, v);\n      });\n    }\n    return '0x' + coder.encodeParam(i.type, value);\n  });\n  result.topics = result.topics.concat(indexedTopics);\n  return result;\n};\n\n/**\n * Should be used to decode indexed params and options\n *\n * @method decode\n * @param {Object} data\n * @return {Object} result object with decoded indexed && not indexed params\n */\nSolidityEvent.prototype.decode = function (data) {\n  data.data = data.data || '';\n  data.topics = data.topics || [];\n  var argTopics = this._anonymous ? data.topics : data.topics.slice(1);\n  var indexedData = argTopics.map(function (topics) {\n    return topics.slice(2);\n  }).join(\"\");\n  var indexedParams = coder.decodeParams(this.types(true), indexedData);\n  var notIndexedData = data.data.slice(2);\n  var notIndexedParams = coder.decodeParams(this.types(false), notIndexedData);\n  var result = formatters.outputLogFormatter(data);\n  result.event = this.displayName();\n  result.address = data.address;\n  result.args = this._params.reduce(function (acc, current) {\n    acc[current.name] = current.indexed ? indexedParams.shift() : notIndexedParams.shift();\n    return acc;\n  }, {});\n  delete result.data;\n  delete result.topics;\n  return result;\n};\n\n/**\n * Should be used to create new filter object from event\n *\n * @method execute\n * @param {Object} indexed\n * @param {Object} options\n * @return {Object} filter object\n */\nSolidityEvent.prototype.execute = function (indexed, options, callback) {\n  if (utils.isFunction(arguments[arguments.length - 1])) {\n    callback = arguments[arguments.length - 1];\n    if (arguments.length === 2) options = null;\n    if (arguments.length === 1) {\n      options = null;\n      indexed = {};\n    }\n  }\n  var o = this.encode(indexed, options);\n  var formatter = this.decode.bind(this);\n  return new Filter(o, 'eth', this._requestManager, watches.eth(), formatter, callback);\n};\n\n/**\n * Should be used to attach event to contract object\n *\n * @method attachToContract\n * @param {Contract}\n */\nSolidityEvent.prototype.attachToContract = function (contract) {\n  var execute = this.execute.bind(this);\n  var displayName = this.displayName();\n  if (!contract[displayName]) {\n    contract[displayName] = execute;\n  }\n  contract[displayName][this.typeName()] = this.execute.bind(this, contract);\n};\nmodule.exports = SolidityEvent;","map":{"version":3,"names":["utils","require","coder","formatters","sha3","Filter","watches","SolidityEvent","requestManager","json","address","_requestManager","_params","inputs","_name","transformToFullName","_address","_anonymous","anonymous","prototype","types","indexed","filter","i","map","type","displayName","extractDisplayName","typeName","extractTypeName","signature","encode","options","result","f","undefined","forEach","inputBlockNumberFormatter","topics","push","indexedTopics","value","name","isArray","v","encodeParam","concat","decode","data","argTopics","slice","indexedData","join","indexedParams","decodeParams","notIndexedData","notIndexedParams","outputLogFormatter","event","args","reduce","acc","current","shift","execute","callback","isFunction","arguments","length","o","formatter","bind","eth","attachToContract","contract","module","exports"],"sources":["E:/Career/University at Buffalo/Semester 2/CSE_Blockchain/Project/playground/research-papers-bid/node_modules/web3/lib/web3/event.js"],"sourcesContent":["/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file event.js\n * @author Marek Kotewicz <marek@ethdev.com>\n * @date 2014\n */\n\nvar utils = require('../utils/utils');\nvar coder = require('../solidity/coder');\nvar formatters = require('./formatters');\nvar sha3 = require('../utils/sha3');\nvar Filter = require('./filter');\nvar watches = require('./methods/watches');\n\n/**\n * This prototype should be used to create event filters\n */\nvar SolidityEvent = function (requestManager, json, address) {\n    this._requestManager = requestManager;\n    this._params = json.inputs;\n    this._name = utils.transformToFullName(json);\n    this._address = address;\n    this._anonymous = json.anonymous;\n};\n\n/**\n * Should be used to get filtered param types\n *\n * @method types\n * @param {Bool} decide if returned typed should be indexed\n * @return {Array} array of types\n */\nSolidityEvent.prototype.types = function (indexed) {\n    return this._params.filter(function (i) {\n        return i.indexed === indexed;\n    }).map(function (i) {\n        return i.type;\n    });\n};\n\n/**\n * Should be used to get event display name\n *\n * @method displayName\n * @return {String} event display name\n */\nSolidityEvent.prototype.displayName = function () {\n    return utils.extractDisplayName(this._name);\n};\n\n/**\n * Should be used to get event type name\n *\n * @method typeName\n * @return {String} event type name\n */\nSolidityEvent.prototype.typeName = function () {\n    return utils.extractTypeName(this._name);\n};\n\n/**\n * Should be used to get event signature\n *\n * @method signature\n * @return {String} event signature\n */\nSolidityEvent.prototype.signature = function () {\n    return sha3(this._name);\n};\n\n/**\n * Should be used to encode indexed params and options to one final object\n *\n * @method encode\n * @param {Object} indexed\n * @param {Object} options\n * @return {Object} everything combined together and encoded\n */\nSolidityEvent.prototype.encode = function (indexed, options) {\n    indexed = indexed || {};\n    options = options || {};\n    var result = {};\n\n    ['fromBlock', 'toBlock'].filter(function (f) {\n        return options[f] !== undefined;\n    }).forEach(function (f) {\n        result[f] = formatters.inputBlockNumberFormatter(options[f]);\n    });\n\n    result.topics = [];\n\n    result.address = this._address;\n    if (!this._anonymous) {\n        result.topics.push('0x' + this.signature());\n    }\n\n    var indexedTopics = this._params.filter(function (i) {\n        return i.indexed === true;\n    }).map(function (i) {\n        var value = indexed[i.name];\n        if (value === undefined || value === null) {\n            return null;\n        }\n\n        if (utils.isArray(value)) {\n            return value.map(function (v) {\n                return '0x' + coder.encodeParam(i.type, v);\n            });\n        }\n        return '0x' + coder.encodeParam(i.type, value);\n    });\n\n    result.topics = result.topics.concat(indexedTopics);\n\n    return result;\n};\n\n/**\n * Should be used to decode indexed params and options\n *\n * @method decode\n * @param {Object} data\n * @return {Object} result object with decoded indexed && not indexed params\n */\nSolidityEvent.prototype.decode = function (data) {\n\n    data.data = data.data || '';\n    data.topics = data.topics || [];\n\n\n    var argTopics = this._anonymous ? data.topics : data.topics.slice(1);\n    var indexedData = argTopics.map(function (topics) { return topics.slice(2); }).join(\"\");\n    var indexedParams = coder.decodeParams(this.types(true), indexedData);\n\n    var notIndexedData = data.data.slice(2);\n    var notIndexedParams = coder.decodeParams(this.types(false), notIndexedData);\n\n    var result = formatters.outputLogFormatter(data);\n    result.event = this.displayName();\n    result.address = data.address;\n\n    result.args = this._params.reduce(function (acc, current) {\n        acc[current.name] = current.indexed ? indexedParams.shift() : notIndexedParams.shift();\n        return acc;\n    }, {});\n\n    delete result.data;\n    delete result.topics;\n\n    return result;\n};\n\n/**\n * Should be used to create new filter object from event\n *\n * @method execute\n * @param {Object} indexed\n * @param {Object} options\n * @return {Object} filter object\n */\nSolidityEvent.prototype.execute = function (indexed, options, callback) {\n\n    if (utils.isFunction(arguments[arguments.length - 1])) {\n        callback = arguments[arguments.length - 1];\n        if(arguments.length === 2)\n            options = null;\n        if(arguments.length === 1) {\n            options = null;\n            indexed = {};\n        }\n    }\n\n    var o = this.encode(indexed, options);\n    var formatter = this.decode.bind(this);\n    return new Filter(o, 'eth', this._requestManager, watches.eth(), formatter, callback);\n};\n\n/**\n * Should be used to attach event to contract object\n *\n * @method attachToContract\n * @param {Contract}\n */\nSolidityEvent.prototype.attachToContract = function (contract) {\n    var execute = this.execute.bind(this);\n    var displayName = this.displayName();\n    if (!contract[displayName]) {\n        contract[displayName] = execute;\n    }\n    contract[displayName][this.typeName()] = this.execute.bind(this, contract);\n};\n\nmodule.exports = SolidityEvent;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}