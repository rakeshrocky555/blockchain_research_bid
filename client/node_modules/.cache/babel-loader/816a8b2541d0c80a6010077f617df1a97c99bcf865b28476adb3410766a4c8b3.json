{"ast":null,"code":"var _jsxFileName = \"E:\\\\Career\\\\University at Buffalo\\\\Semester 2\\\\CSE_Blockchain\\\\Project\\\\playground\\\\research-papers-bid\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport Web3 from \"web3\";\nimport { useState, useEffect } from \"react\";\n//import SimpleStorage from \"./contracts/SimpleStorage.json\"\nimport ResearchPaperBid from \"./contracts/ResearchPapers.json\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [state, setState] = useState({\n    web3: null,\n    contract: null\n  });\n  //data to show to the user\n  const [data, setData] = useState(\"Nil\");\n  // //below is used to set author address\n  const [author_address, set_author_address] = useState(\"Nil\");\n  // //below is used to set research paper name\n  // const [paper_name, set_paper_name] = useState(\"Nil\");\n\n  useEffect(() => {\n    //below is the ganache address\n    const provider = new Web3.providers.HttpProvider(\"HTTP://127.0.0.1:7545\");\n    async function template() {\n      //web3 object\n      const web3 = new Web3(provider);\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = ResearchPaperBid.networks[networkId];\n      console.log(deployedNetwork.address);\n      //to interact with the smart contract we need two things ABI & contract address\n\n      const contract = new web3.eth.Contract(ResearchPaperBid.abi, deployedNetwork.address, {\n        from: '0x2B8abeD96CA07b19c107Ab28ee5bf28F3a0e5E33',\n        gas: '3000000'\n      });\n      console.log(contract);\n\n      //setting the state of the application\n      setState({\n        web3: web3,\n        contract: contract\n      });\n    }\n    provider && template();\n  }, []);\n  console.log(state);\n  console.log(\"Calling methods inside the smart contract\");\n\n  //   useEffect(() => {\n  //     //getting contract instance from the state\n  //     const {contract} = state;\n  //     async function readData(){\n  //       // for getting data we use call function else we use send function\n  //       const data = await contract.methods.getter().call();\n  //       setData(data);\n  //   }\n  //   contract && readData();\n  // //in the below we are passing state as the dependancy because\n  // }, [state]);\n\n  // async function writeData(){\n  //   const {contract} = state;\n  //   const data = document.querySelector(\"#value\").value;\n  //   //when changing data we need to tell from which account you are changing the data\n  //   //await contract.methods.setter(10).send({from: \"0x20Ca32Bca072ECE39155516Cd22bcFDE4814E0c6\"});\n  //   await contract.methods.setter(data).send({from: \"0x2B8abeD96CA07b19c107Ab28ee5bf28F3a0e5E33\"});\n  //   //for refreshing the page\n  //   window.location.reload();\n  // }\n\n  //we use below aync method for minting Research paper\n  async function mint_validate_Token() {\n    const {\n      contract\n    } = state;\n    const author_data = document.querySelector(\"#value1\").value;\n    const paper_data = document.querySelector(\"#value2\").value;\n    //when changing data we need to tell from which account you are changing the data\n    //await contract.methods.setter(10).send({from: \"0x20Ca32Bca072ECE39155516Cd22bcFDE4814E0c6\"});\n    await contract.methods.uploadPaperAndValidate(author_data, paper_data).send({\n      from: \"0x2B8abeD96CA07b19c107Ab28ee5bf28F3a0e5E33\"\n    });\n    //await contract.methods.setter(data).send({from: \"0x2B8abeD96CA07b19c107Ab28ee5bf28F3a0e5E33\"});\n    //for refreshing the page\n    window.location.reload();\n  }\n\n  //below functionality is to get the owner address of the research paper\n  async function research_paper_details() {\n    const {\n      contract\n    } = state;\n    const tokenId = document.querySelector(\"#value3\").value;\n    document.getElementById(\"value\");\n    const details = await contract.methods.ownerOf(tokenId).send({\n      from: \"0x2B8abeD96CA07b19c107Ab28ee5bf28F3a0e5E33\"\n    });\n    //for refreshing the page\n    //window.location.reload();\n    //await iAmAPromise.then(result => result.data);\n    //set_author_address(details)\n    console.log(\"Printing author address for the research paper\");\n    console.log(details);\n    return details;\n  }\n\n  //*****************************************bidding operation****************************************\n  async function open_bidding() {\n    const {\n      contract\n    } = state;\n    const tokenId = document.querySelector(\"#value4\").value;\n    const details = await contract.methods.start_bidding(tokenId).send({\n      from: \"0x2B8abeD96CA07b19c107Ab28ee5bf28F3a0e5E33\"\n    });\n    //for refreshing the page\n    //window.location.reload();\n    return details;\n  }\n\n  //bid\n  async function bid_token() {\n    const {\n      contract\n    } = state;\n    const bidder_addr = document.querySelector(\"#value5\").value;\n    const bid_value = document.querySelector(\"#value6\").value;\n    const tokenId = document.querySelector(\"#value4\").value;\n    const details = await contract.methods.start_bidding(tokenId).send({\n      from: bidder_addr,\n      value: bid_value\n    });\n    //for refreshing the page\n    //window.location.reload();\n    //return details;\n  }\n\n  //close bidding\n  async function close_bid() {\n    const {\n      contract\n    } = state;\n    await contract.methods.close_bidding().send({\n      from: \"0x2B8abeD96CA07b19c107Ab28ee5bf28F3a0e5E33\"\n    });\n    //for refreshing the page\n    //window.location.reload();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please enter the Author address, research paper details to validate the research paper and mint the NFTs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      for: \"value1\",\n      children: \"Author address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"value1\",\n      name: \"value1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      for: \"value2\",\n      children: \"Research paper name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"value2\",\n      name: \"value2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: mint_validate_Token,\n      children: \"Tokenize Research paper\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please enter token ID to find the owner of the research paper\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      for: \"value3\",\n      children: \"Token ID\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"value3\",\n      name: \"value3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"address\",\n      onClick: () => set_author_address(research_paper_details),\n      children: \"Get Author address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: author_address\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Bidding Operations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      for: \"value4\",\n      children: \"Bidding token ID\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"value4\",\n      name: \"value4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: open_bidding,\n      children: \"Open Bidding\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please enter bidder address and bid value\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      for: \"value5\",\n      children: \"Bidder address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"value5\",\n      name: \"value5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      for: \"value6\",\n      children: \"Bid Value\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"value6\",\n      name: \"value6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: bid_token,\n      children: \"Tokenize Research paper\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: close_bid,\n      children: \"Close Bidding\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 12\n  }, this);\n}\n_s(App, \"DaOWd+Q70DB/jK5i/G/appJyIXk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Web3","useState","useEffect","ResearchPaperBid","jsxDEV","_jsxDEV","App","_s","state","setState","web3","contract","data","setData","author_address","set_author_address","provider","providers","HttpProvider","template","networkId","eth","net","getId","deployedNetwork","networks","console","log","address","Contract","abi","from","gas","mint_validate_Token","author_data","document","querySelector","value","paper_data","methods","uploadPaperAndValidate","send","window","location","reload","research_paper_details","tokenId","getElementById","details","ownerOf","open_bidding","start_bidding","bid_token","bidder_addr","bid_value","close_bid","close_bidding","className","children","fileName","_jsxFileName","lineNumber","columnNumber","for","type","id","name","onClick","_c","$RefreshReg$"],"sources":["E:/Career/University at Buffalo/Semester 2/CSE_Blockchain/Project/playground/research-papers-bid/client/src/App.js"],"sourcesContent":["import Web3 from \"web3\";\nimport {useState, useEffect} from \"react\";\n//import SimpleStorage from \"./contracts/SimpleStorage.json\"\nimport ResearchPaperBid from \"./contracts/ResearchPapers.json\"\nimport './App.css';\n\nfunction App() {\n    const [state, setState] = useState({web3: null, contract: null});\n    //data to show to the user\n    const [data, setData] = useState(\"Nil\");\n    // //below is used to set author address\n    const [author_address, set_author_address] = useState(\"Nil\");\n    // //below is used to set research paper name\n    // const [paper_name, set_paper_name] = useState(\"Nil\");\n    \n    useEffect(() => {\n      //below is the ganache address\n      const provider = new Web3.providers.HttpProvider(\"HTTP://127.0.0.1:7545\");\n      async function template(){\n        //web3 object\n        const web3 = new Web3(provider);\n        const networkId = await web3.eth.net.getId();\n        const deployedNetwork = ResearchPaperBid.networks[networkId];\n        console.log(deployedNetwork.address);\n        //to interact with the smart contract we need two things ABI & contract address\n\n        const contract = new web3.eth.Contract(ResearchPaperBid.abi, deployedNetwork.address, {\n          from: '0x2B8abeD96CA07b19c107Ab28ee5bf28F3a0e5E33',\n          gas: '3000000'\n        });\n        console.log(contract)\n\n        //setting the state of the application\n        setState({web3: web3, contract: contract})\n\n      }\n      provider && template();\n    }, []);\n    console.log(state);\n\n    console.log(\"Calling methods inside the smart contract\");\n\n  //   useEffect(() => {\n  //     //getting contract instance from the state\n  //     const {contract} = state;\n  //     async function readData(){\n  //       // for getting data we use call function else we use send function\n  //       const data = await contract.methods.getter().call();\n  //       setData(data);\n  //   }\n  //   contract && readData();\n  // //in the below we are passing state as the dependancy because\n  // }, [state]);\n\n  // async function writeData(){\n  //   const {contract} = state;\n  //   const data = document.querySelector(\"#value\").value;\n  //   //when changing data we need to tell from which account you are changing the data\n  //   //await contract.methods.setter(10).send({from: \"0x20Ca32Bca072ECE39155516Cd22bcFDE4814E0c6\"});\n  //   await contract.methods.setter(data).send({from: \"0x2B8abeD96CA07b19c107Ab28ee5bf28F3a0e5E33\"});\n  //   //for refreshing the page\n  //   window.location.reload();\n  // }\n\n  //we use below aync method for minting Research paper\n    async function mint_validate_Token(){\n    const {contract} = state;\n    const author_data = document.querySelector(\"#value1\").value;\n    const paper_data = document.querySelector(\"#value2\").value;\n    //when changing data we need to tell from which account you are changing the data\n    //await contract.methods.setter(10).send({from: \"0x20Ca32Bca072ECE39155516Cd22bcFDE4814E0c6\"});\n    await contract.methods.uploadPaperAndValidate(author_data, paper_data).send({from: \"0x2B8abeD96CA07b19c107Ab28ee5bf28F3a0e5E33\"});\n    //await contract.methods.setter(data).send({from: \"0x2B8abeD96CA07b19c107Ab28ee5bf28F3a0e5E33\"});\n    //for refreshing the page\n    window.location.reload();\n  }\n\n  //below functionality is to get the owner address of the research paper\n  async function research_paper_details(){\n    const {contract} = state;\n    const tokenId = document.querySelector(\"#value3\").value;\n    document.getElementById(\"value\")\n    const details = await contract.methods.ownerOf(tokenId).send({from: \"0x2B8abeD96CA07b19c107Ab28ee5bf28F3a0e5E33\"});\n    //for refreshing the page\n    //window.location.reload();\n    //await iAmAPromise.then(result => result.data);\n    //set_author_address(details)\n    console.log(\"Printing author address for the research paper\");\n    console.log(details);\n    return details;\n  }\n\n  //*****************************************bidding operation****************************************\n  async function open_bidding(){\n    const {contract} = state;\n    const tokenId = document.querySelector(\"#value4\").value;\n    const details = await contract.methods.start_bidding(tokenId).send({from: \"0x2B8abeD96CA07b19c107Ab28ee5bf28F3a0e5E33\"});\n    //for refreshing the page\n    //window.location.reload();\n    return details;\n  }\n\n  //bid\n  async function bid_token(){\n    const {contract} = state;\n    const bidder_addr = document.querySelector(\"#value5\").value;\n    const bid_value = document.querySelector(\"#value6\").value;\n    const tokenId = document.querySelector(\"#value4\").value;\n    const details = await contract.methods.start_bidding(tokenId).send({from: bidder_addr, value: bid_value});\n    //for refreshing the page\n    //window.location.reload();\n    //return details;\n  }\n\n  //close bidding\n  async function close_bid(){\n    const {contract} = state;\n    await contract.methods.close_bidding().send({from: \"0x2B8abeD96CA07b19c107Ab28ee5bf28F3a0e5E33\"});\n    //for refreshing the page\n    //window.location.reload();\n  }\n\n\n\n    return <div className=\"App\">\n      {/* <p>Contract data: {data}</p>\n      <input type = \"text\" id = \"value\"></input>\n      <button onClick={writeData}>Change Data</button> */}\n      <p>Please enter the Author address, research paper details to validate the research paper and mint the NFTs</p>\n      <label for=\"value1\">Author address</label>\n      <input type = \"text\" id = \"value1\" name = \"value1\"></input>\n      <label for=\"value2\">Research paper name</label>\n      <input type = \"text\" id = \"value2\" name = \"value2\"></input>\n      <button onClick={mint_validate_Token}>Tokenize Research paper</button>\n\n      <p>Please enter token ID to find the owner of the research paper</p>\n      <label for=\"value3\">Token ID</label>\n      <input type = \"text\" id = \"value3\" name = \"value3\"></input>\n      {/* <button onClick={research_paper_details}>Get Author address</button> */}\n      <button id =\"address\" onClick={() => set_author_address(research_paper_details)}>Get Author address</button>\n      <input value = {author_address}/>\n      {/* <button onClick=\"return research_paper_details()\">Get Author address</button> */}\n\n      <p>Bidding Operations</p>\n      <label for=\"value4\">Bidding token ID</label>\n      <input type = \"text\" id = \"value4\" name = \"value4\"></input>\n      <button onClick={open_bidding}>Open Bidding</button>\n\n      <p>Please enter bidder address and bid value</p>\n      <label for=\"value5\">Bidder address</label>\n      <input type = \"text\" id = \"value5\" name = \"value5\"></input>\n      <label for=\"value6\">Bid Value</label>\n      <input type = \"text\" id = \"value6\" name = \"value6\"></input>\n      <button onClick={bid_token}>Tokenize Research paper</button>\n\n      <button onClick={close_bid}>Close Bidding</button>\n\n    </div>\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}