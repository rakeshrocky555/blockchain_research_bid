{"ast":null,"code":"/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/** @file httpprovider.js\n * @authors:\n *   Marek Kotewicz <marek@ethdev.com>\n *   Marian Oancea <marian@ethdev.com>\n *   Fabian Vogelsteller <fabian@ethdev.com>\n * @date 2015\n */\n\nvar errors = require('./errors');\n\n// workaround to use httpprovider in different envs\n\n// browser\nif (typeof window !== 'undefined' && window.XMLHttpRequest) {\n  XMLHttpRequest = window.XMLHttpRequest; // jshint ignore: line\n  // node\n} else {\n  XMLHttpRequest = require('xmlhttprequest').XMLHttpRequest; // jshint ignore: line\n}\n\nvar XHR2 = require('xhr2-cookies').XMLHttpRequest; // jshint ignore: line\n\n/**\n * HttpProvider should be used to send rpc calls over http\n */\nvar HttpProvider = function (host, timeout, user, password, headers) {\n  this.host = host || 'http://localhost:8545';\n  this.timeout = timeout || 0;\n  this.user = user;\n  this.password = password;\n  this.headers = headers;\n};\n\n/**\n * Should be called to prepare new XMLHttpRequest\n *\n * @method prepareRequest\n * @param {Boolean} true if request should be async\n * @return {XMLHttpRequest} object\n */\nHttpProvider.prototype.prepareRequest = function (async) {\n  var request;\n  if (async) {\n    request = new XHR2();\n    request.timeout = this.timeout;\n  } else {\n    request = new XMLHttpRequest();\n  }\n  request.withCredentials = true;\n  request.open('POST', this.host, async);\n  if (this.user && this.password) {\n    var auth = 'Basic ' + new Buffer(this.user + ':' + this.password).toString('base64');\n    request.setRequestHeader('Authorization', auth);\n  }\n  request.setRequestHeader('Content-Type', 'application/json');\n  if (this.headers) {\n    this.headers.forEach(function (header) {\n      request.setRequestHeader(header.name, header.value);\n    });\n  }\n  return request;\n};\n\n/**\n * Should be called to make sync request\n *\n * @method send\n * @param {Object} payload\n * @return {Object} result\n */\nHttpProvider.prototype.send = function (payload) {\n  var request = this.prepareRequest(false);\n  try {\n    request.send(JSON.stringify(payload));\n  } catch (error) {\n    throw errors.InvalidConnection(this.host);\n  }\n  var result = request.responseText;\n  try {\n    result = JSON.parse(result);\n  } catch (e) {\n    throw errors.InvalidResponse(request.responseText);\n  }\n  return result;\n};\n\n/**\n * Should be used to make async request\n *\n * @method sendAsync\n * @param {Object} payload\n * @param {Function} callback triggered on end with (err, result)\n */\nHttpProvider.prototype.sendAsync = function (payload, callback) {\n  var request = this.prepareRequest(true);\n  request.onreadystatechange = function () {\n    if (request.readyState === 4 && request.timeout !== 1) {\n      var result = request.responseText;\n      var error = null;\n      try {\n        result = JSON.parse(result);\n      } catch (e) {\n        error = errors.InvalidResponse(request.responseText);\n      }\n      callback(error, result);\n    }\n  };\n  request.ontimeout = function () {\n    callback(errors.ConnectionTimeout(this.timeout));\n  };\n  try {\n    request.send(JSON.stringify(payload));\n  } catch (error) {\n    callback(errors.InvalidConnection(this.host));\n  }\n};\n\n/**\n * Synchronously tries to make Http request\n *\n * @method isConnected\n * @return {Boolean} returns true if request haven't failed. Otherwise false\n */\nHttpProvider.prototype.isConnected = function () {\n  try {\n    this.send({\n      id: 9999999999,\n      jsonrpc: '2.0',\n      method: 'net_listening',\n      params: []\n    });\n    return true;\n  } catch (e) {\n    return false;\n  }\n};\nmodule.exports = HttpProvider;","map":{"version":3,"names":["errors","require","window","XMLHttpRequest","XHR2","HttpProvider","host","timeout","user","password","headers","prototype","prepareRequest","async","request","withCredentials","open","auth","Buffer","toString","setRequestHeader","forEach","header","name","value","send","payload","JSON","stringify","error","InvalidConnection","result","responseText","parse","e","InvalidResponse","sendAsync","callback","onreadystatechange","readyState","ontimeout","ConnectionTimeout","isConnected","id","jsonrpc","method","params","module","exports"],"sources":["E:/Career/University at Buffalo/Semester 2/CSE_Blockchain/Project/playground/research-papers-bid/node_modules/web3/lib/web3/httpprovider.js"],"sourcesContent":["/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/** @file httpprovider.js\n * @authors:\n *   Marek Kotewicz <marek@ethdev.com>\n *   Marian Oancea <marian@ethdev.com>\n *   Fabian Vogelsteller <fabian@ethdev.com>\n * @date 2015\n */\n\nvar errors = require('./errors');\n\n// workaround to use httpprovider in different envs\n\n// browser\nif (typeof window !== 'undefined' && window.XMLHttpRequest) {\n  XMLHttpRequest = window.XMLHttpRequest; // jshint ignore: line\n// node\n} else {\n  XMLHttpRequest = require('xmlhttprequest').XMLHttpRequest; // jshint ignore: line\n}\n\nvar XHR2 = require('xhr2-cookies').XMLHttpRequest; // jshint ignore: line\n\n/**\n * HttpProvider should be used to send rpc calls over http\n */\nvar HttpProvider = function (host, timeout, user, password, headers) {\n  this.host = host || 'http://localhost:8545';\n  this.timeout = timeout || 0;\n  this.user = user;\n  this.password = password;\n  this.headers = headers;\n};\n\n/**\n * Should be called to prepare new XMLHttpRequest\n *\n * @method prepareRequest\n * @param {Boolean} true if request should be async\n * @return {XMLHttpRequest} object\n */\nHttpProvider.prototype.prepareRequest = function (async) {\n  var request;\n\n  if (async) {\n    request = new XHR2();\n    request.timeout = this.timeout;\n  } else {\n    request = new XMLHttpRequest();\n  }\n  request.withCredentials = true;\n\n  request.open('POST', this.host, async);\n  if (this.user && this.password) {\n    var auth = 'Basic ' + new Buffer(this.user + ':' + this.password).toString('base64');\n    request.setRequestHeader('Authorization', auth);\n  } request.setRequestHeader('Content-Type', 'application/json');\n  if(this.headers) {\n      this.headers.forEach(function(header) {\n          request.setRequestHeader(header.name, header.value);\n      });\n  }\n  return request;\n};\n\n/**\n * Should be called to make sync request\n *\n * @method send\n * @param {Object} payload\n * @return {Object} result\n */\nHttpProvider.prototype.send = function (payload) {\n  var request = this.prepareRequest(false);\n\n  try {\n    request.send(JSON.stringify(payload));\n  } catch (error) {\n    throw errors.InvalidConnection(this.host);\n  }\n\n  var result = request.responseText;\n\n  try {\n    result = JSON.parse(result);\n  } catch (e) {\n    throw errors.InvalidResponse(request.responseText);\n  }\n\n  return result;\n};\n\n/**\n * Should be used to make async request\n *\n * @method sendAsync\n * @param {Object} payload\n * @param {Function} callback triggered on end with (err, result)\n */\nHttpProvider.prototype.sendAsync = function (payload, callback) {\n  var request = this.prepareRequest(true);\n\n  request.onreadystatechange = function () {\n    if (request.readyState === 4 && request.timeout !== 1) {\n      var result = request.responseText;\n      var error = null;\n\n      try {\n        result = JSON.parse(result);\n      } catch (e) {\n        error = errors.InvalidResponse(request.responseText);\n      }\n\n      callback(error, result);\n    }\n  };\n\n  request.ontimeout = function () {\n    callback(errors.ConnectionTimeout(this.timeout));\n  };\n\n  try {\n    request.send(JSON.stringify(payload));\n  } catch (error) {\n    callback(errors.InvalidConnection(this.host));\n  }\n};\n\n/**\n * Synchronously tries to make Http request\n *\n * @method isConnected\n * @return {Boolean} returns true if request haven't failed. Otherwise false\n */\nHttpProvider.prototype.isConnected = function () {\n  try {\n    this.send({\n      id: 9999999999,\n      jsonrpc: '2.0',\n      method: 'net_listening',\n      params: []\n    });\n    return true;\n  } catch (e) {\n    return false;\n  }\n};\n\nmodule.exports = HttpProvider;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}