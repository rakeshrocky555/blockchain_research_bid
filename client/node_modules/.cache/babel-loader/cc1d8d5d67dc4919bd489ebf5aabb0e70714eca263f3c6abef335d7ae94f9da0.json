{"ast":null,"code":"/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file eth.js\n * @author Marek Kotewicz <marek@ethdev.com>\n * @author Fabian Vogelsteller <fabian@ethdev.com>\n * @date 2015\n */\n\n\"use strict\";\n\nvar formatters = require('../formatters');\nvar utils = require('../../utils/utils');\nvar Method = require('../method');\nvar Property = require('../property');\nvar c = require('../../utils/config');\nvar Contract = require('../contract');\nvar watches = require('./watches');\nvar Filter = require('../filter');\nvar IsSyncing = require('../syncing');\nvar namereg = require('../namereg');\nvar Iban = require('../iban');\nvar transfer = require('../transfer');\nvar blockCall = function (args) {\n  return utils.isString(args[0]) && args[0].indexOf('0x') === 0 ? \"eth_getBlockByHash\" : \"eth_getBlockByNumber\";\n};\nvar transactionFromBlockCall = function (args) {\n  return utils.isString(args[0]) && args[0].indexOf('0x') === 0 ? 'eth_getTransactionByBlockHashAndIndex' : 'eth_getTransactionByBlockNumberAndIndex';\n};\nvar uncleCall = function (args) {\n  return utils.isString(args[0]) && args[0].indexOf('0x') === 0 ? 'eth_getUncleByBlockHashAndIndex' : 'eth_getUncleByBlockNumberAndIndex';\n};\nvar getBlockTransactionCountCall = function (args) {\n  return utils.isString(args[0]) && args[0].indexOf('0x') === 0 ? 'eth_getBlockTransactionCountByHash' : 'eth_getBlockTransactionCountByNumber';\n};\nvar uncleCountCall = function (args) {\n  return utils.isString(args[0]) && args[0].indexOf('0x') === 0 ? 'eth_getUncleCountByBlockHash' : 'eth_getUncleCountByBlockNumber';\n};\nfunction Eth(web3) {\n  this._requestManager = web3._requestManager;\n  var self = this;\n  methods().forEach(function (method) {\n    method.attachToObject(self);\n    method.setRequestManager(self._requestManager);\n  });\n  properties().forEach(function (p) {\n    p.attachToObject(self);\n    p.setRequestManager(self._requestManager);\n  });\n  this.iban = Iban;\n  this.sendIBANTransaction = transfer.bind(null, this);\n}\nObject.defineProperty(Eth.prototype, 'defaultBlock', {\n  get: function () {\n    return c.defaultBlock;\n  },\n  set: function (val) {\n    c.defaultBlock = val;\n    return val;\n  }\n});\nObject.defineProperty(Eth.prototype, 'defaultAccount', {\n  get: function () {\n    return c.defaultAccount;\n  },\n  set: function (val) {\n    c.defaultAccount = val;\n    return val;\n  }\n});\nvar methods = function () {\n  var getBalance = new Method({\n    name: 'getBalance',\n    call: 'eth_getBalance',\n    params: 2,\n    inputFormatter: [formatters.inputAddressFormatter, formatters.inputDefaultBlockNumberFormatter],\n    outputFormatter: formatters.outputBigNumberFormatter\n  });\n  var getStorageAt = new Method({\n    name: 'getStorageAt',\n    call: 'eth_getStorageAt',\n    params: 3,\n    inputFormatter: [null, utils.toHex, formatters.inputDefaultBlockNumberFormatter]\n  });\n  var getCode = new Method({\n    name: 'getCode',\n    call: 'eth_getCode',\n    params: 2,\n    inputFormatter: [formatters.inputAddressFormatter, formatters.inputDefaultBlockNumberFormatter]\n  });\n  var getBlock = new Method({\n    name: 'getBlock',\n    call: blockCall,\n    params: 2,\n    inputFormatter: [formatters.inputBlockNumberFormatter, function (val) {\n      return !!val;\n    }],\n    outputFormatter: formatters.outputBlockFormatter\n  });\n  var getUncle = new Method({\n    name: 'getUncle',\n    call: uncleCall,\n    params: 2,\n    inputFormatter: [formatters.inputBlockNumberFormatter, utils.toHex],\n    outputFormatter: formatters.outputBlockFormatter\n  });\n  var getCompilers = new Method({\n    name: 'getCompilers',\n    call: 'eth_getCompilers',\n    params: 0\n  });\n  var getBlockTransactionCount = new Method({\n    name: 'getBlockTransactionCount',\n    call: getBlockTransactionCountCall,\n    params: 1,\n    inputFormatter: [formatters.inputBlockNumberFormatter],\n    outputFormatter: utils.toDecimal\n  });\n  var getBlockUncleCount = new Method({\n    name: 'getBlockUncleCount',\n    call: uncleCountCall,\n    params: 1,\n    inputFormatter: [formatters.inputBlockNumberFormatter],\n    outputFormatter: utils.toDecimal\n  });\n  var getTransaction = new Method({\n    name: 'getTransaction',\n    call: 'eth_getTransactionByHash',\n    params: 1,\n    outputFormatter: formatters.outputTransactionFormatter\n  });\n  var getTransactionFromBlock = new Method({\n    name: 'getTransactionFromBlock',\n    call: transactionFromBlockCall,\n    params: 2,\n    inputFormatter: [formatters.inputBlockNumberFormatter, utils.toHex],\n    outputFormatter: formatters.outputTransactionFormatter\n  });\n  var getTransactionReceipt = new Method({\n    name: 'getTransactionReceipt',\n    call: 'eth_getTransactionReceipt',\n    params: 1,\n    outputFormatter: formatters.outputTransactionReceiptFormatter\n  });\n  var getTransactionCount = new Method({\n    name: 'getTransactionCount',\n    call: 'eth_getTransactionCount',\n    params: 2,\n    inputFormatter: [null, formatters.inputDefaultBlockNumberFormatter],\n    outputFormatter: utils.toDecimal\n  });\n  var sendRawTransaction = new Method({\n    name: 'sendRawTransaction',\n    call: 'eth_sendRawTransaction',\n    params: 1,\n    inputFormatter: [null]\n  });\n  var sendTransaction = new Method({\n    name: 'sendTransaction',\n    call: 'eth_sendTransaction',\n    params: 1,\n    inputFormatter: [formatters.inputTransactionFormatter]\n  });\n  var signTransaction = new Method({\n    name: 'signTransaction',\n    call: 'eth_signTransaction',\n    params: 1,\n    inputFormatter: [formatters.inputTransactionFormatter]\n  });\n  var sign = new Method({\n    name: 'sign',\n    call: 'eth_sign',\n    params: 2,\n    inputFormatter: [formatters.inputAddressFormatter, null]\n  });\n  var call = new Method({\n    name: 'call',\n    call: 'eth_call',\n    params: 2,\n    inputFormatter: [formatters.inputCallFormatter, formatters.inputDefaultBlockNumberFormatter]\n  });\n  var estimateGas = new Method({\n    name: 'estimateGas',\n    call: 'eth_estimateGas',\n    params: 1,\n    inputFormatter: [formatters.inputCallFormatter],\n    outputFormatter: utils.toDecimal\n  });\n  var compileSolidity = new Method({\n    name: 'compile.solidity',\n    call: 'eth_compileSolidity',\n    params: 1\n  });\n  var compileLLL = new Method({\n    name: 'compile.lll',\n    call: 'eth_compileLLL',\n    params: 1\n  });\n  var compileSerpent = new Method({\n    name: 'compile.serpent',\n    call: 'eth_compileSerpent',\n    params: 1\n  });\n  var submitWork = new Method({\n    name: 'submitWork',\n    call: 'eth_submitWork',\n    params: 3\n  });\n  var getWork = new Method({\n    name: 'getWork',\n    call: 'eth_getWork',\n    params: 0\n  });\n  return [getBalance, getStorageAt, getCode, getBlock, getUncle, getCompilers, getBlockTransactionCount, getBlockUncleCount, getTransaction, getTransactionFromBlock, getTransactionReceipt, getTransactionCount, call, estimateGas, sendRawTransaction, signTransaction, sendTransaction, sign, compileSolidity, compileLLL, compileSerpent, submitWork, getWork];\n};\nvar properties = function () {\n  return [new Property({\n    name: 'coinbase',\n    getter: 'eth_coinbase'\n  }), new Property({\n    name: 'mining',\n    getter: 'eth_mining'\n  }), new Property({\n    name: 'hashrate',\n    getter: 'eth_hashrate',\n    outputFormatter: utils.toDecimal\n  }), new Property({\n    name: 'syncing',\n    getter: 'eth_syncing',\n    outputFormatter: formatters.outputSyncingFormatter\n  }), new Property({\n    name: 'gasPrice',\n    getter: 'eth_gasPrice',\n    outputFormatter: formatters.outputBigNumberFormatter\n  }), new Property({\n    name: 'accounts',\n    getter: 'eth_accounts'\n  }), new Property({\n    name: 'blockNumber',\n    getter: 'eth_blockNumber',\n    outputFormatter: utils.toDecimal\n  }), new Property({\n    name: 'protocolVersion',\n    getter: 'eth_protocolVersion'\n  })];\n};\nEth.prototype.contract = function (abi) {\n  var factory = new Contract(this, abi);\n  return factory;\n};\nEth.prototype.filter = function (options, callback, filterCreationErrorCallback) {\n  return new Filter(options, 'eth', this._requestManager, watches.eth(), formatters.outputLogFormatter, callback, filterCreationErrorCallback);\n};\nEth.prototype.namereg = function () {\n  return this.contract(namereg.global.abi).at(namereg.global.address);\n};\nEth.prototype.icapNamereg = function () {\n  return this.contract(namereg.icap.abi).at(namereg.icap.address);\n};\nEth.prototype.isSyncing = function (callback) {\n  return new IsSyncing(this._requestManager, callback);\n};\nmodule.exports = Eth;","map":{"version":3,"names":["formatters","require","utils","Method","Property","c","Contract","watches","Filter","IsSyncing","namereg","Iban","transfer","blockCall","args","isString","indexOf","transactionFromBlockCall","uncleCall","getBlockTransactionCountCall","uncleCountCall","Eth","web3","_requestManager","self","methods","forEach","method","attachToObject","setRequestManager","properties","p","iban","sendIBANTransaction","bind","Object","defineProperty","prototype","get","defaultBlock","set","val","defaultAccount","getBalance","name","call","params","inputFormatter","inputAddressFormatter","inputDefaultBlockNumberFormatter","outputFormatter","outputBigNumberFormatter","getStorageAt","toHex","getCode","getBlock","inputBlockNumberFormatter","outputBlockFormatter","getUncle","getCompilers","getBlockTransactionCount","toDecimal","getBlockUncleCount","getTransaction","outputTransactionFormatter","getTransactionFromBlock","getTransactionReceipt","outputTransactionReceiptFormatter","getTransactionCount","sendRawTransaction","sendTransaction","inputTransactionFormatter","signTransaction","sign","inputCallFormatter","estimateGas","compileSolidity","compileLLL","compileSerpent","submitWork","getWork","getter","outputSyncingFormatter","contract","abi","factory","filter","options","callback","filterCreationErrorCallback","eth","outputLogFormatter","global","at","address","icapNamereg","icap","isSyncing","module","exports"],"sources":["E:/Career/University at Buffalo/Semester 2/CSE_Blockchain/Project/playground/research-papers-bid/node_modules/web3/lib/web3/methods/eth.js"],"sourcesContent":["/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file eth.js\n * @author Marek Kotewicz <marek@ethdev.com>\n * @author Fabian Vogelsteller <fabian@ethdev.com>\n * @date 2015\n */\n\n\"use strict\";\n\nvar formatters = require('../formatters');\nvar utils = require('../../utils/utils');\nvar Method = require('../method');\nvar Property = require('../property');\nvar c = require('../../utils/config');\nvar Contract = require('../contract');\nvar watches = require('./watches');\nvar Filter = require('../filter');\nvar IsSyncing = require('../syncing');\nvar namereg = require('../namereg');\nvar Iban = require('../iban');\nvar transfer = require('../transfer');\n\nvar blockCall = function (args) {\n    return (utils.isString(args[0]) && args[0].indexOf('0x') === 0) ? \"eth_getBlockByHash\" : \"eth_getBlockByNumber\";\n};\n\nvar transactionFromBlockCall = function (args) {\n    return (utils.isString(args[0]) && args[0].indexOf('0x') === 0) ? 'eth_getTransactionByBlockHashAndIndex' : 'eth_getTransactionByBlockNumberAndIndex';\n};\n\nvar uncleCall = function (args) {\n    return (utils.isString(args[0]) && args[0].indexOf('0x') === 0) ? 'eth_getUncleByBlockHashAndIndex' : 'eth_getUncleByBlockNumberAndIndex';\n};\n\nvar getBlockTransactionCountCall = function (args) {\n    return (utils.isString(args[0]) && args[0].indexOf('0x') === 0) ? 'eth_getBlockTransactionCountByHash' : 'eth_getBlockTransactionCountByNumber';\n};\n\nvar uncleCountCall = function (args) {\n    return (utils.isString(args[0]) && args[0].indexOf('0x') === 0) ? 'eth_getUncleCountByBlockHash' : 'eth_getUncleCountByBlockNumber';\n};\n\nfunction Eth(web3) {\n    this._requestManager = web3._requestManager;\n\n    var self = this;\n\n    methods().forEach(function(method) {\n        method.attachToObject(self);\n        method.setRequestManager(self._requestManager);\n    });\n\n    properties().forEach(function(p) {\n        p.attachToObject(self);\n        p.setRequestManager(self._requestManager);\n    });\n\n\n    this.iban = Iban;\n    this.sendIBANTransaction = transfer.bind(null, this);\n}\n\nObject.defineProperty(Eth.prototype, 'defaultBlock', {\n    get: function () {\n        return c.defaultBlock;\n    },\n    set: function (val) {\n        c.defaultBlock = val;\n        return val;\n    }\n});\n\nObject.defineProperty(Eth.prototype, 'defaultAccount', {\n    get: function () {\n        return c.defaultAccount;\n    },\n    set: function (val) {\n        c.defaultAccount = val;\n        return val;\n    }\n});\n\nvar methods = function () {\n    var getBalance = new Method({\n        name: 'getBalance',\n        call: 'eth_getBalance',\n        params: 2,\n        inputFormatter: [formatters.inputAddressFormatter, formatters.inputDefaultBlockNumberFormatter],\n        outputFormatter: formatters.outputBigNumberFormatter\n    });\n\n    var getStorageAt = new Method({\n        name: 'getStorageAt',\n        call: 'eth_getStorageAt',\n        params: 3,\n        inputFormatter: [null, utils.toHex, formatters.inputDefaultBlockNumberFormatter]\n    });\n\n    var getCode = new Method({\n        name: 'getCode',\n        call: 'eth_getCode',\n        params: 2,\n        inputFormatter: [formatters.inputAddressFormatter, formatters.inputDefaultBlockNumberFormatter]\n    });\n\n    var getBlock = new Method({\n        name: 'getBlock',\n        call: blockCall,\n        params: 2,\n        inputFormatter: [formatters.inputBlockNumberFormatter, function (val) { return !!val; }],\n        outputFormatter: formatters.outputBlockFormatter\n    });\n\n    var getUncle = new Method({\n        name: 'getUncle',\n        call: uncleCall,\n        params: 2,\n        inputFormatter: [formatters.inputBlockNumberFormatter, utils.toHex],\n        outputFormatter: formatters.outputBlockFormatter,\n\n    });\n\n    var getCompilers = new Method({\n        name: 'getCompilers',\n        call: 'eth_getCompilers',\n        params: 0\n    });\n\n    var getBlockTransactionCount = new Method({\n        name: 'getBlockTransactionCount',\n        call: getBlockTransactionCountCall,\n        params: 1,\n        inputFormatter: [formatters.inputBlockNumberFormatter],\n        outputFormatter: utils.toDecimal\n    });\n\n    var getBlockUncleCount = new Method({\n        name: 'getBlockUncleCount',\n        call: uncleCountCall,\n        params: 1,\n        inputFormatter: [formatters.inputBlockNumberFormatter],\n        outputFormatter: utils.toDecimal\n    });\n\n    var getTransaction = new Method({\n        name: 'getTransaction',\n        call: 'eth_getTransactionByHash',\n        params: 1,\n        outputFormatter: formatters.outputTransactionFormatter\n    });\n\n    var getTransactionFromBlock = new Method({\n        name: 'getTransactionFromBlock',\n        call: transactionFromBlockCall,\n        params: 2,\n        inputFormatter: [formatters.inputBlockNumberFormatter, utils.toHex],\n        outputFormatter: formatters.outputTransactionFormatter\n    });\n\n    var getTransactionReceipt = new Method({\n        name: 'getTransactionReceipt',\n        call: 'eth_getTransactionReceipt',\n        params: 1,\n        outputFormatter: formatters.outputTransactionReceiptFormatter\n    });\n\n    var getTransactionCount = new Method({\n        name: 'getTransactionCount',\n        call: 'eth_getTransactionCount',\n        params: 2,\n        inputFormatter: [null, formatters.inputDefaultBlockNumberFormatter],\n        outputFormatter: utils.toDecimal\n    });\n\n    var sendRawTransaction = new Method({\n        name: 'sendRawTransaction',\n        call: 'eth_sendRawTransaction',\n        params: 1,\n        inputFormatter: [null]\n    });\n\n    var sendTransaction = new Method({\n        name: 'sendTransaction',\n        call: 'eth_sendTransaction',\n        params: 1,\n        inputFormatter: [formatters.inputTransactionFormatter]\n    });\n\n    var signTransaction = new Method({\n        name: 'signTransaction',\n        call: 'eth_signTransaction',\n        params: 1,\n        inputFormatter: [formatters.inputTransactionFormatter]\n    });\n\n    var sign = new Method({\n        name: 'sign',\n        call: 'eth_sign',\n        params: 2,\n        inputFormatter: [formatters.inputAddressFormatter, null]\n    });\n\n    var call = new Method({\n        name: 'call',\n        call: 'eth_call',\n        params: 2,\n        inputFormatter: [formatters.inputCallFormatter, formatters.inputDefaultBlockNumberFormatter]\n    });\n\n    var estimateGas = new Method({\n        name: 'estimateGas',\n        call: 'eth_estimateGas',\n        params: 1,\n        inputFormatter: [formatters.inputCallFormatter],\n        outputFormatter: utils.toDecimal\n    });\n\n    var compileSolidity = new Method({\n        name: 'compile.solidity',\n        call: 'eth_compileSolidity',\n        params: 1\n    });\n\n    var compileLLL = new Method({\n        name: 'compile.lll',\n        call: 'eth_compileLLL',\n        params: 1\n    });\n\n    var compileSerpent = new Method({\n        name: 'compile.serpent',\n        call: 'eth_compileSerpent',\n        params: 1\n    });\n\n    var submitWork = new Method({\n        name: 'submitWork',\n        call: 'eth_submitWork',\n        params: 3\n    });\n\n    var getWork = new Method({\n        name: 'getWork',\n        call: 'eth_getWork',\n        params: 0\n    });\n\n    return [\n        getBalance,\n        getStorageAt,\n        getCode,\n        getBlock,\n        getUncle,\n        getCompilers,\n        getBlockTransactionCount,\n        getBlockUncleCount,\n        getTransaction,\n        getTransactionFromBlock,\n        getTransactionReceipt,\n        getTransactionCount,\n        call,\n        estimateGas,\n        sendRawTransaction,\n        signTransaction,\n        sendTransaction,\n        sign,\n        compileSolidity,\n        compileLLL,\n        compileSerpent,\n        submitWork,\n        getWork\n    ];\n};\n\n\nvar properties = function () {\n    return [\n        new Property({\n            name: 'coinbase',\n            getter: 'eth_coinbase'\n        }),\n        new Property({\n            name: 'mining',\n            getter: 'eth_mining'\n        }),\n        new Property({\n            name: 'hashrate',\n            getter: 'eth_hashrate',\n            outputFormatter: utils.toDecimal\n        }),\n        new Property({\n            name: 'syncing',\n            getter: 'eth_syncing',\n            outputFormatter: formatters.outputSyncingFormatter\n        }),\n        new Property({\n            name: 'gasPrice',\n            getter: 'eth_gasPrice',\n            outputFormatter: formatters.outputBigNumberFormatter\n        }),\n        new Property({\n            name: 'accounts',\n            getter: 'eth_accounts'\n        }),\n        new Property({\n            name: 'blockNumber',\n            getter: 'eth_blockNumber',\n            outputFormatter: utils.toDecimal\n        }),\n        new Property({\n            name: 'protocolVersion',\n            getter: 'eth_protocolVersion'\n        })\n    ];\n};\n\nEth.prototype.contract = function (abi) {\n    var factory = new Contract(this, abi);\n    return factory;\n};\n\nEth.prototype.filter = function (options, callback, filterCreationErrorCallback) {\n    return new Filter(options, 'eth', this._requestManager, watches.eth(), formatters.outputLogFormatter, callback, filterCreationErrorCallback);\n};\n\nEth.prototype.namereg = function () {\n    return this.contract(namereg.global.abi).at(namereg.global.address);\n};\n\nEth.prototype.icapNamereg = function () {\n    return this.contract(namereg.icap.abi).at(namereg.icap.address);\n};\n\nEth.prototype.isSyncing = function (callback) {\n    return new IsSyncing(this._requestManager, callback);\n};\n\nmodule.exports = Eth;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}