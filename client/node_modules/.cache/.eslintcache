[{"E:\\Career\\University at Buffalo\\Semester 2\\CSE_Blockchain\\Project\\playground\\research-papers-bid\\client\\src\\index.js":"1","E:\\Career\\University at Buffalo\\Semester 2\\CSE_Blockchain\\Project\\playground\\research-papers-bid\\client\\src\\App.js":"2","E:\\Career\\University at Buffalo\\Semester 2\\CSE_Blockchain\\Project\\playground\\research-papers-bid\\client\\src\\reportWebVitals.js":"3","E:\\Career\\University at Buffalo\\Semester 2\\CSE_Blockchain\\Project\\playground\\research-papers-bid\\client\\src\\routes\\Home.js":"4","E:\\Career\\University at Buffalo\\Semester 2\\CSE_Blockchain\\Project\\playground\\research-papers-bid\\client\\src\\routes\\Reports.js":"5","E:\\Career\\University at Buffalo\\Semester 2\\CSE_Blockchain\\Project\\playground\\research-papers-bid\\client\\src\\routes\\Products.js":"6","E:\\Career\\University at Buffalo\\Semester 2\\CSE_Blockchain\\Project\\playground\\research-papers-bid\\client\\src\\components\\Navbar.js":"7","E:\\Career\\University at Buffalo\\Semester 2\\CSE_Blockchain\\Project\\playground\\research-papers-bid\\client\\src\\components\\SidebarData.js":"8","E:\\Career\\University at Buffalo\\Semester 2\\CSE_Blockchain\\Project\\playground\\research-papers-bid\\client\\src\\routes\\RegisterPaper.js":"9","E:\\Career\\University at Buffalo\\Semester 2\\CSE_Blockchain\\Project\\playground\\research-papers-bid\\client\\src\\database.js":"10"},{"size":1503,"mtime":1682714488898,"results":"11","hashOfConfig":"12"},{"size":6688,"mtime":1682700117969,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1681951346893,"results":"14","hashOfConfig":"12"},{"size":1875,"mtime":1682638441076,"results":"15","hashOfConfig":"12"},{"size":2065,"mtime":1682643687961,"results":"16","hashOfConfig":"12"},{"size":3219,"mtime":1682643888194,"results":"17","hashOfConfig":"12"},{"size":1421,"mtime":1682613983136,"results":"18","hashOfConfig":"12"},{"size":1020,"mtime":1682698123871,"results":"19","hashOfConfig":"12"},{"size":1860,"mtime":1682791924247,"results":"20","hashOfConfig":"12"},{"size":198,"mtime":1682699734165,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"26"},"apg6gf",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},"E:\\Career\\University at Buffalo\\Semester 2\\CSE_Blockchain\\Project\\playground\\research-papers-bid\\client\\src\\index.js",["61","62","63","64","65"],[],"import React from \"react\";\r\nimport { createRoot } from \"react-dom/client\";\r\nimport {\r\n  createBrowserRouter,\r\n  RouterProvider,\r\n  Route,\r\n  Link,\r\n  Outlet,\r\n  createRoutesFromElements,\r\n} from \"react-router-dom\";\r\nimport Products from \"./routes/Products\";\r\nimport Home from \"./routes/Home\";\r\nimport Reports from \"./routes/Reports\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport RegisterPaper from \"./routes/RegisterPaper\";\r\nimport \"./App.css\";\r\nimport App from \"./App\"\r\n\r\n//const client = require('pg');\r\n\r\nconst AppLayout = () => (\r\n  <>\r\n    <Navbar />\r\n    <Outlet />\r\n  </>\r\n);\r\n\r\n// const router = createBrowserRouter(\r\n//   createRoutesFromElements(\r\n//     <Route element={<AppLayout />}>\r\n//       <Route path=\"/\" element={<Home />} />\r\n//       <Route path=\"/products\" element={<Products />} />\r\n//       <Route path=\"/reports\" element={<Reports />} />\r\n//     </Route>\r\n//   )\r\n// );\r\n\r\nconst router = createBrowserRouter([\r\n  {\r\n    element: <AppLayout />,\r\n    children: [\r\n      {\r\n        path: \"/\",\r\n        element: <Home />,\r\n      },\r\n      {\r\n        path: \"products\",\r\n        element: <Products/>,\r\n      },\r\n      {\r\n        path: \"reports\",\r\n        element: <Reports/>,\r\n      },\r\n      {\r\n        path: \"registerpaper\",\r\n        element: <RegisterPaper/>\r\n      },\r\n    ],\r\n  },\r\n]);\r\n\r\n{/* <Route path=\"/passport\" element={<PassportPhoto uuid={this.state.uuid} />} /> */}\r\n\r\ncreateRoot(document.getElementById(\"root\")).render(\r\n  <RouterProvider router={router} />\r\n);\r\n",[],"E:\\Career\\University at Buffalo\\Semester 2\\CSE_Blockchain\\Project\\playground\\research-papers-bid\\client\\src\\App.js",["66","67","68"],[],"import Web3 from \"web3\";\nimport {useState, useEffect} from \"react\";\nimport ResearchPaperBid from \"./contracts/ResearchPapers.json\"\nimport './App.css';\nimport { utils } from 'ethers';\n\nfunction App() {\n    //var details=\"\";\n\n    const [state, setState] = useState({web3: null, contract: null});\n    //data to show to the user\n    const [data, setData] = useState(\"Nil\");\n    // //below is used to set author address\n    const [author_address, set_author_address] = useState(\"Nil\");\n    // //below is used to set research paper name\n    // const [paper_name, set_paper_name] = useState(\"Nil\");\n    \n    useEffect(() => {\n      //below is the ganache address\n      const provider = new Web3.providers.HttpProvider(\"HTTP://127.0.0.1:7545\");\n      async function template(){\n        //web3 object\n        const web3 = new Web3(provider);\n        const networkId = await web3.eth.net.getId();\n        const deployedNetwork = ResearchPaperBid.networks[networkId];\n        console.log(deployedNetwork.address);\n        //to interact with the smart contract we need two things ABI & contract address\n\n        const contract = new web3.eth.Contract(ResearchPaperBid.abi, deployedNetwork.address, {\n          from: '0xEba1B25c50e0347CA532745078AA06efF6De5b51',\n          gas: '3000000000000'\n        });\n        console.log(contract);\n\n        //setting the state of the application\n        setState({web3: web3, contract: contract});\n\n      }\n      provider && template();\n    }, []);\n    console.log(state);\n\n    console.log(\"Calling methods inside the smart contract\");\n\n  //   useEffect(() => {\n  //     //getting contract instance from the state\n  //     const {contract} = state;\n  //     async function readData(){\n  //       // for getting data we use call function else we use send function\n  //       const data = await contract.methods.getter().call();\n  //       setData(data);\n  //   }\n  //   contract && readData();\n  // //in the below we are passing state as the dependancy because\n  // }, [state]);\n\n  // async function writeData(){\n  //   const {contract} = state;\n  //   const data = document.querySelector(\"#value\").value;\n  //   //when changing data we need to tell from which account you are changing the data\n  //   //await contract.methods.setter(10).send({from: \"0x20Ca32Bca072ECE39155516Cd22bcFDE4814E0c6\"});\n  //   await contract.methods.setter(data).send({from: \"0x2B8abeD96CA07b19c107Ab28ee5bf28F3a0e5E33\"});\n  //   //for refreshing the page\n  //   window.location.reload();\n  // }\n\n  //we use below aync method for minting Research paper\n    async function mint_validate_Token(){\n    const {contract} = state;\n    const author_data = document.querySelector(\"#value1\").value;\n    const paper_data = document.querySelector(\"#value2\").value;\n    //when changing data we need to tell from which account you are changing the data\n    await contract.methods.uploadPaperAndValidate(author_data, paper_data).send({from: \"0xEba1B25c50e0347CA532745078AA06efF6De5b51\"});\n    //for refreshing the page\n    window.location.reload();\n  }\n\n  //below functionality is to get the owner address of the research paper\n  async function research_paper_details(){\n    const {contract} = state;\n    const tokenId = document.querySelector(\"#value3\").value;\n    console.log(\"Token id entered is, \", tokenId);\n    //document.getElementById(\"address\").innerHTML=21;\n    //contract.methods.ownerOf(tokenId).call({from: \"0xE8bf0504795BbB9e38113b38aEa9a2C40272103f\"});\n    (contract.methods.ownerOf(tokenId).call({from: \"0xEba1B25c50e0347CA532745078AA06efF6De5b51\"})).then(data => set_author_address(data));\n  }\n\n  //*****************************************bidding operation****************************************\n  async function open_bidding(){\n    const {contract} = state;\n    const tokenId = document.querySelector(\"#value4\").value;\n    //do we need to use call or send\n    //const details = await contract.methods.start_bidding(tokenId).call({from: \"0x2D29F6760062F540F168a1fC247b44ffE533c094\"});\n    \n    const details = await contract.methods.start_bidding(tokenId).send({from: \"0xEba1B25c50e0347CA532745078AA06efF6De5b51\"});\n    //for refreshing the page\n    window.location.reload();\n    return details;\n  }\n\n  //bid\n  async function bid_token(){\n    const {contract} = state;\n    const bidder_addr = document.querySelector(\"#value5\").value;\n    console.log(\"Bidder address is \", bidder_addr);\n    const bid_value = document.querySelector(\"#value6\").value;\n    console.log(\"Bid value is\", (Web3.utils.toWei(bid_value.toString(), \"ether\")).toString());\n    await contract.methods.bid().send({from: bidder_addr, value: Web3.utils.toWei(bid_value.toString(), \"ether\")});\n  }\n\n  //close bidding\n  async function close_bid(){\n    const {contract} = state;\n    await contract.methods.close_bidding().send({from: \"0xEba1B25c50e0347CA532745078AA06efF6De5b51\"});\n    //for refreshing the page\n    //window.location.reload();\n  }\n\n\n\n    return <div className=\"App\">\n      {/* <p>Contract data: {data}</p>\n      <input type = \"text\" id = \"value\"></input>\n      <button onClick={writeData}>Change Data</button> */}\n      <p>Please enter the Author address, research paper details to validate the research paper and mint the NFTs</p>\n      <label for=\"value1\">Author address</label>\n      <input type = \"text\" id = \"value1\" name = \"value1\"></input>\n      <label for=\"value2\">Research paper name</label>\n      <input type = \"text\" id = \"value2\" name = \"value2\"></input>\n      <button onClick={mint_validate_Token}>Tokenize Research paper</button>\n      \n\n      <p>Please enter token ID to find the owner of the research paper</p>\n      <label for=\"value3\">Token ID</label>\n      <input type = \"text\" id = \"value3\" name = \"value3\"></input>\n      <button onClick={research_paper_details}>Get Author address</button>\n      {/* <button  onClick={() => set_author_address(research_paper_details)}>Get Author address</button> */}\n      {/*printing the owner address with the id*/}\n      <p>Author address is: {author_address}</p>\n      {/* <p id=\"owner_address\"></p> */}\n\n      <p>Bidding Operations</p>\n      <label for=\"value4\">Bidding token ID</label>\n      <input type = \"text\" id = \"value4\" name = \"value4\"></input>\n      <button onClick={open_bidding}>Open Bidding</button>\n\n      <p>Please enter bidder address and bid value</p>\n      <label for=\"value5\">Bidder address</label>\n      <input type = \"text\" id = \"value5\" name = \"value5\"></input>\n      <label for=\"value6\">Bid Value</label>\n      <input type = \"text\" id = \"value6\" name = \"value6\"></input>\n      <button onClick={bid_token}>Bid</button>\n      \n\n      <button onClick={close_bid}>Close Bidding</button>\n\n    </div>\n}\n\nexport default App;\n","E:\\Career\\University at Buffalo\\Semester 2\\CSE_Blockchain\\Project\\playground\\research-papers-bid\\client\\src\\reportWebVitals.js",[],[],[],"E:\\Career\\University at Buffalo\\Semester 2\\CSE_Blockchain\\Project\\playground\\research-papers-bid\\client\\src\\routes\\Home.js",["69","70","71","72","73","74","75"],[],"//import React from \"react\";\r\nimport Web3 from \"web3\";\r\nimport {useState, useEffect, createContext} from \"react\";\r\nimport ResearchPaperBid from \"../contracts/ResearchPapers.json\"\r\nimport Reports from \"./Reports\";\r\n//import './App.css';\r\nimport { utils } from 'ethers';\r\n\r\n//export const StateContext = createContext();\r\n\r\nfunction Home() {\r\n  //var details=\"\";\r\n  const [state, setState] = useState({web3: null, contract: null});\r\n  //data to show to the user\r\n  const [data, setData] = useState(\"Nil\");\r\n  // //below is used to set author address\r\n  const [author_address, set_author_address] = useState(\"Nil\");\r\n  // //below is used to set research paper name\r\n  // const [paper_name, set_paper_name] = useState(\"Nil\");\r\n  \r\n  useEffect(() => {\r\n    //below is the ganache address\r\n    const provider = new Web3.providers.HttpProvider(\"HTTP://127.0.0.1:7545\");\r\n    async function template(){\r\n      //web3 object\r\n      const web3 = new Web3(provider);\r\n      const networkId = await web3.eth.net.getId();\r\n      const deployedNetwork = ResearchPaperBid.networks[networkId];\r\n      console.log(deployedNetwork.address);\r\n      //to interact with the smart contract we need two things ABI & contract address\r\n\r\n      const contract = new web3.eth.Contract(ResearchPaperBid.abi, deployedNetwork.address, {\r\n        from: '0xEba1B25c50e0347CA532745078AA06efF6De5b51',\r\n        gas: '3000000'\r\n      });\r\n\r\n      //setting the state of the application\r\n      setState({web3: web3, contract: contract});\r\n\r\n    }\r\n    provider && template();\r\n  }, []);\r\n  console.log(\"State inside Home is\", state);\r\n  console.log(\"Calling methods inside the smart contract\");\r\n\r\n\r\n  return(\r\n    <div className=\"home\">\r\n      {/* <p>State is {state}</p> */}\r\n      {/* <Reports/> */}\r\n      <h1>Welcome to Bidding system for Research papers</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","E:\\Career\\University at Buffalo\\Semester 2\\CSE_Blockchain\\Project\\playground\\research-papers-bid\\client\\src\\routes\\Reports.js",["76"],[],"import Web3 from \"web3\";\r\nimport {useState, useEffect, useContext} from \"react\";\r\nimport ResearchPaperBid from \"../contracts/ResearchPapers.json\"\r\n\r\nfunction Reports() {\r\n\r\n  const [author_address, set_author_address] = useState(\"Nil\");\r\n  const [state, setState] = useState({web3: null, contract: null});\r\n\r\n  useEffect(() => {\r\n    //below is the ganache address\r\n    const provider = new Web3.providers.HttpProvider(\"HTTP://127.0.0.1:7545\");\r\n    async function template(){\r\n      //web3 object\r\n      const web3 = new Web3(provider);\r\n      const networkId = await web3.eth.net.getId();\r\n      const deployedNetwork = ResearchPaperBid.networks[networkId];\r\n      console.log(deployedNetwork.address);\r\n      //to interact with the smart contract we need two things ABI & contract address\r\n\r\n      const contract = new web3.eth.Contract(ResearchPaperBid.abi, deployedNetwork.address, {\r\n        from: '0xEba1B25c50e0347CA532745078AA06efF6De5b51',\r\n        gas: '3000000'\r\n      });\r\n\r\n      //setting the state of the application\r\n      setState({web3: web3, contract: contract});\r\n    }\r\n    provider && template();\r\n  }, []);\r\n\r\n  console.log(\"Inside reports file\", state);\r\n\r\n  async function research_paper_details(){\r\n    const {contract} = state;\r\n    const tokenId = document.querySelector(\"#value3\").value;\r\n    console.log(\"Token id entered is, \", tokenId);\r\n    (contract.methods.ownerOf(tokenId).call({from: \"0xEba1B25c50e0347CA532745078AA06efF6De5b51\"})).then(data => set_author_address(data));\r\n  }\r\n\r\n  return (\r\n    <div className=\"reports\">\r\n      <h1>Reports</h1>\r\n      <br></br>\r\n      <p>Please enter token ID to find the owner of the research paper</p>\r\n      <label for=\"value3\">Token ID</label>\r\n      <input type = \"text\" id = \"value3\" name = \"value3\"></input>\r\n      <button onClick={research_paper_details}>Get Author address</button>\r\n      {/*printing the owner address with the id*/}\r\n      <p>Author address is: {author_address}</p>\r\n      {/* <p id=\"owner_address\"></p> */}\r\n    </div>\r\n\r\n    \r\n  );\r\n}\r\n\r\nexport default Reports;\r\n","E:\\Career\\University at Buffalo\\Semester 2\\CSE_Blockchain\\Project\\playground\\research-papers-bid\\client\\src\\routes\\Products.js",["77","78","79"],[],"import React from \"react\";\r\n\r\nimport Web3 from \"web3\";\r\nimport {useState, useEffect, useContext} from \"react\";\r\nimport ResearchPaperBid from \"../contracts/ResearchPapers.json\"\r\n\r\nfunction Products() {\r\n\r\n  const [author_address, set_author_address] = useState(\"Nil\");\r\n  const [state, setState] = useState({web3: null, contract: null});\r\n\r\n  useEffect(() => {\r\n    //below is the ganache address\r\n    const provider = new Web3.providers.HttpProvider(\"HTTP://127.0.0.1:7545\");\r\n    async function template(){\r\n      //web3 object\r\n      const web3 = new Web3(provider);\r\n      const networkId = await web3.eth.net.getId();\r\n      const deployedNetwork = ResearchPaperBid.networks[networkId];\r\n      console.log(deployedNetwork.address);\r\n      //to interact with the smart contract we need two things ABI & contract address\r\n\r\n      const contract = new web3.eth.Contract(ResearchPaperBid.abi, deployedNetwork.address, {\r\n        from: '0xEba1B25c50e0347CA532745078AA06efF6De5b51',\r\n        gas: '3000000'\r\n      });\r\n\r\n      //setting the state of the application\r\n      setState({web3: web3, contract: contract});\r\n    }\r\n    provider && template();\r\n  }, []);\r\n\r\n  console.log(\"Inside reports file\", state);\r\n\r\n  async function open_bidding(){\r\n    const {contract} = state;\r\n    const tokenId = document.querySelector(\"#value4\").value;\r\n    //do we need to use call or send\r\n    //const details = await contract.methods.start_bidding(tokenId).call({from: \"0x2D29F6760062F540F168a1fC247b44ffE533c094\"});\r\n    \r\n    const details = await contract.methods.start_bidding(tokenId).send({from: \"0xEba1B25c50e0347CA532745078AA06efF6De5b51\"});\r\n    //for refreshing the page\r\n    window.location.reload();\r\n    return details;\r\n  }\r\n\r\n  //bid\r\n  async function bid_token(){\r\n    const {contract} = state;\r\n    const bidder_addr = document.querySelector(\"#value5\").value;\r\n    console.log(\"Bidder address is \", bidder_addr);\r\n    const bid_value = document.querySelector(\"#value6\").value;\r\n    console.log(\"Bid value is\", (Web3.utils.toWei(bid_value.toString(), \"ether\")).toString());\r\n    await contract.methods.bid().send({from: bidder_addr, value: Web3.utils.toWei(bid_value.toString(), \"ether\")});\r\n  }\r\n\r\n  //close bidding\r\n  async function close_bid(){\r\n    const {contract} = state;\r\n    await contract.methods.close_bidding().send({from: \"0xEba1B25c50e0347CA532745078AA06efF6De5b51\"});\r\n    //for refreshing the page\r\n    //window.location.reload();\r\n  }\r\n\r\n  return (\r\n    <div className=\"products\">\r\n      <h1>Reports</h1>\r\n      <br></br>\r\n      <p>Bidding Operations</p>\r\n      <label for=\"value4\">Bidding token ID</label>\r\n      <input type = \"text\" id = \"value4\" name = \"value4\"></input>\r\n      <button onClick={open_bidding}>Open Bidding</button>\r\n\r\n      <p>Please enter bidder address and bid value</p>\r\n      <label for=\"value5\">Bidder address</label>\r\n      <input type = \"text\" id = \"value5\" name = \"value5\"></input>\r\n      <label for=\"value6\">Bid Value</label>\r\n      <input type = \"text\" id = \"value6\" name = \"value6\"></input>\r\n      <button onClick={bid_token}>Bid</button>\r\n      \r\n\r\n      <button onClick={close_bid}>Close Bidding</button>\r\n    </div>\r\n\r\n    \r\n  );\r\n}\r\n\r\nexport default Products;\r\n\r\n","E:\\Career\\University at Buffalo\\Semester 2\\CSE_Blockchain\\Project\\playground\\research-papers-bid\\client\\src\\components\\Navbar.js",[],[],"E:\\Career\\University at Buffalo\\Semester 2\\CSE_Blockchain\\Project\\playground\\research-papers-bid\\client\\src\\components\\SidebarData.js",[],[],"E:\\Career\\University at Buffalo\\Semester 2\\CSE_Blockchain\\Project\\playground\\research-papers-bid\\client\\src\\routes\\RegisterPaper.js",["80","81","82"],[],"E:\\Career\\University at Buffalo\\Semester 2\\CSE_Blockchain\\Project\\playground\\research-papers-bid\\client\\src\\database.js",["83","84"],[],"const {Pool, Client} = require('pg')\r\n    const client = new Client({\r\n    user: \"postgres\",\r\n    host: \"localhost\",\r\n    database: \"blockchain_db\",\r\n    password: \"root\",\r\n    port: 5432\r\n    });\r\n",[],{"ruleId":"85","severity":1,"message":"86","line":6,"column":3,"nodeType":"87","messageId":"88","endLine":6,"endColumn":8},{"ruleId":"85","severity":1,"message":"89","line":7,"column":3,"nodeType":"87","messageId":"88","endLine":7,"endColumn":7},{"ruleId":"85","severity":1,"message":"90","line":9,"column":3,"nodeType":"87","messageId":"88","endLine":9,"endColumn":27},{"ruleId":"85","severity":1,"message":"91","line":17,"column":8,"nodeType":"87","messageId":"88","endLine":17,"endColumn":11},{"ruleId":"92","severity":1,"message":"93","line":62,"column":1,"nodeType":"94","messageId":"95","endLine":62,"endColumn":86},{"ruleId":"85","severity":1,"message":"96","line":5,"column":10,"nodeType":"87","messageId":"88","endLine":5,"endColumn":15},{"ruleId":"85","severity":1,"message":"97","line":12,"column":12,"nodeType":"87","messageId":"88","endLine":12,"endColumn":16},{"ruleId":"85","severity":1,"message":"98","line":12,"column":18,"nodeType":"87","messageId":"88","endLine":12,"endColumn":25},{"ruleId":"85","severity":1,"message":"99","line":3,"column":30,"nodeType":"87","messageId":"88","endLine":3,"endColumn":43},{"ruleId":"85","severity":1,"message":"100","line":5,"column":8,"nodeType":"87","messageId":"88","endLine":5,"endColumn":15},{"ruleId":"85","severity":1,"message":"96","line":7,"column":10,"nodeType":"87","messageId":"88","endLine":7,"endColumn":15},{"ruleId":"85","severity":1,"message":"97","line":15,"column":10,"nodeType":"87","messageId":"88","endLine":15,"endColumn":14},{"ruleId":"85","severity":1,"message":"98","line":15,"column":16,"nodeType":"87","messageId":"88","endLine":15,"endColumn":23},{"ruleId":"85","severity":1,"message":"101","line":17,"column":10,"nodeType":"87","messageId":"88","endLine":17,"endColumn":24},{"ruleId":"85","severity":1,"message":"102","line":17,"column":26,"nodeType":"87","messageId":"88","endLine":17,"endColumn":44},{"ruleId":"85","severity":1,"message":"103","line":2,"column":30,"nodeType":"87","messageId":"88","endLine":2,"endColumn":40},{"ruleId":"85","severity":1,"message":"103","line":4,"column":30,"nodeType":"87","messageId":"88","endLine":4,"endColumn":40},{"ruleId":"85","severity":1,"message":"101","line":9,"column":10,"nodeType":"87","messageId":"88","endLine":9,"endColumn":24},{"ruleId":"85","severity":1,"message":"102","line":9,"column":26,"nodeType":"87","messageId":"88","endLine":9,"endColumn":44},{"ruleId":"85","severity":1,"message":"103","line":2,"column":30,"nodeType":"87","messageId":"88","endLine":2,"endColumn":40},{"ruleId":"85","severity":1,"message":"104","line":6,"column":8,"nodeType":"87","messageId":"88","endLine":6,"endColumn":12},{"ruleId":"85","severity":1,"message":"105","line":8,"column":8,"nodeType":"87","messageId":"88","endLine":8,"endColumn":24},{"ruleId":"85","severity":1,"message":"106","line":1,"column":8,"nodeType":"87","messageId":"88","endLine":1,"endColumn":12},{"ruleId":"85","severity":1,"message":"107","line":2,"column":11,"nodeType":"87","messageId":"88","endLine":2,"endColumn":17},"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'createRoutesFromElements' is defined but never used.","'App' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'utils' is defined but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","'createContext' is defined but never used.","'Reports' is defined but never used.","'author_address' is assigned a value but never used.","'set_author_address' is assigned a value but never used.","'useContext' is defined but never used.","'Web3' is defined but never used.","'ResearchPaperBid' is defined but never used.","'Pool' is assigned a value but never used.","'client' is assigned a value but never used."]